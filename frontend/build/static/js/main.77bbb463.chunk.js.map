{"version":3,"sources":["global/Navbar.js","dashboard/ProgressBarComponent.js","dashboard/StockTable.js","dashboard/FavoriteCard.js","dashboard/PieChart.js","dashboard/SubNavbar.js","dashboard/Dashboard.js","wallet/InfoCard.js","wallet/WalletTable.js","wallet/TransactionsTable.js","wallet/WalletAllocationChart.js","wallet/WalletYield.js","wallet/Wallet.js","stockdetail/StockDetailComponent.js","addstock/AddStockComponent.js","query/QueryComponent.js","bvsp/IbovespaComponent.js","App.js","index.js"],"names":["withRouter","pathname","location","Navbar","bg","expand","variant","Brand","className","href","Toggle","aria-controls","Collapse","id","Nav","Link","active","includes","ProgressBarComponent","props","Row","ProgressBar","animated","now","loadingProgress","style","width","label","Math","round","StockTable","state","isLoading","stocks","stocksId","favoriteHandler","bind","e","persist","target","classList","contains","replace","firstChild","data","axios","put","pk","parseInt","getAttribute","then","resp","console","log","this","setState","get","itemsProcessed","favorite","forEach","stock","push","index","array","updated_stock","length","content","Table","size","striped","responsive","map","colorClass","price","toLocaleString","currency","change","change_percent","key","fontSize","symbol","to","Button","onClick","stockid","toString","Component","FavoriteCard","deleteHandler","delete","hello","asdhasi","status","alert","Container","Col","sm","name","substr","PieChartComponent","useState","SubNavbar","indexes","country","data2","forexes","itemsProcessed2","item","params","object","settings","dots","infinite","speed","slidesToShow","slidesToScroll","autoplay","autoplaySpeed","breakpoint","Card","text","Body","Badge","pill","DashboardComponent","fluid","PieChart","Header","InfoCard","percentageValue","color","title","toUpperCase","description","descriptionValue","value","percentage","WalletTable","React","ModalEdit","setModalEdit","ModalAdd","setModalAdd","Stock","setStock","Amount","setAmount","Investment","setInvestment","Broker","setBroker","EditId","setEditId","BuyDate","setBuyDate","useEffect","handleStockAmountChange","handleInvestmentChange","parseFloat","toggleModalAdd","toggleModalEdit","deleteWalletItem","find","o","window","confirm","cb","money_amount","investment","cursor","broker","owner","buy_price","stock_amount","isOpen","toggle","md","onSubmit","preventDefault","post","buy_date","catch","err","icon","group","type","onChange","required","error","success","Form","Group","controlId","Control","as","custom","defaultValue","disabled","TransactionsTable","submitTransactionItem","uploadData","FormData","append","Operation","Date","Document","Data","date","operation","document","download","encType","File","files","WalletAllocationChart","options","chart","height","animations","enabled","easing","animateGradually","delay","dynamicAnimation","align","fontFamily","plotOptions","pie","donut","labels","show","formatter","val","amount","legend","position","colors","dataLabels","series","lab","ser","WalletYield","bar","horizontal","offsetX","stroke","ser1","ser2","ibovespa_change","WalletComponent","handleOwnerChange","Owner","Loading","higher","max","apply","obj","min","object2","reduce","sum","currentValue","Wallet","TotalAmount","TotalInvestment","TotalChangePct","MaxStockChange","MinStockChange","noData","walletChangeCallback","msg","submitWalletItem","stockAmount","stockAmout","spinner","Spinner","animation","role","noDataContent","notChosen","toLowerCase","Label","Tab","defaultActiveKey","Item","eventKey","Content","Pane","lg","xs","StockDetailComponent","Indicators","undefined","Dataset2","Dataset","Price","Options","Series","Options2","indicators","dataset","dates","closePrices","buy","sell","neutral","match","indicator","momentum","signal","ema_signal","historical","close","unshift","x","y","open","high","low","xaxis","yaxis","tooltip","resistances","supports","xl","AddStockComponent","setSymbol","isETF","setETF","isFund","setFund","is_etf","is_fund","Check","checked","QueryComponent","loadedContent","loadingContent","handleSubmit","handleSymbolChange","toLocaleUpperCase","content2","IbovespaComponent","App","exact","path","component","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.77bbb463.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\n\r\nimport \"./Navbar.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nfunction TopBar({ location }) {\r\n  const { pathname } = location;\r\n\r\n  return (\r\n    <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\">\r\n      <Navbar.Brand className=\"\" href=\"/\">\r\n        <span>RM</span> INVESTIMENTOS\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link\r\n            className=\"navbar-link-item\"\r\n            href=\"/\"\r\n            active={pathname === \"/\"}\r\n          >\r\n            DASHBOARD\r\n          </Nav.Link>\r\n          <Nav.Link\r\n            className=\"navbar-link-item\"\r\n            href=\"/wallet\"\r\n            active={pathname.includes(\"/wallet\")}\r\n          >\r\n            CARTEIRA\r\n          </Nav.Link>\r\n          <Nav.Link\r\n            className=\"navbar-link-item\"\r\n            href=\"/addStock\"\r\n            active={pathname.includes(\"/addStock\")}\r\n          >\r\n            ADICIONAR AÇÃO\r\n          </Nav.Link>\r\n          <Nav.Link\r\n            className=\"navbar-link-item\"\r\n            href=\"/query\"\r\n            active={pathname.includes(\"/query\")}\r\n          >\r\n            CONSULTA\r\n          </Nav.Link>\r\n          {/* <Nav.Link\r\n            className=\"navbar-link-item\"\r\n            href=\"/forex\"\r\n            active={pathname.includes(\"/forex\")}\r\n          >\r\n            CÂMBIO\r\n          </Nav.Link> */}\r\n          <Nav.Link\r\n            className=\"navbar-link-item\"\r\n            href=\"/bvsp\"\r\n            active={pathname.includes(\"/bvsp\")}\r\n          >\r\n            IBOVESPA\r\n          </Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\nexport default withRouter(TopBar);\r\n","import React from \"react\";\r\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\nconst ProgressBarComponent = (props) => {\r\n  return (\r\n    <>\r\n      <Row>\r\n        <ProgressBar\r\n          animated\r\n          variant=\"dark\"\r\n          now={props.loadingProgress}\r\n          style={{ width: \"100%\" }}\r\n          label={`${Math.round(props.loadingProgress)}%`}\r\n        />\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProgressBarComponent;\r\n","import React, { Component } from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./StockTable.css\";\r\nimport axios from \"axios\";\r\nimport ProgressBarComponent from \"./ProgressBarComponent\";\r\n\r\n// Função que atualiza as informações do ativo dado um ID\r\n\r\nclass StockTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // creating States\r\n    this.state = {\r\n      isLoading: true,\r\n      stocks: [],\r\n      loadingProgress: 0,\r\n      stocksId: [],\r\n    };\r\n    this.favoriteHandler = this.favoriteHandler.bind(this);\r\n  }\r\n\r\n  favoriteHandler(e) {\r\n    e.persist();\r\n\r\n    if (e.target.classList.contains(\"btn-outline-info\")) {\r\n      e.target.classList.replace(\"btn-outline-info\", \"btn-info\");\r\n      e.target.firstChild.data = \"Favoritar\";\r\n    } else {\r\n      e.target.classList.replace(\"btn-info\", \"btn-outline-info\");\r\n      e.target.firstChild.data = \"Desfavoritar\";\r\n    }\r\n    axios\r\n      .put(\"http://localhost:8000/api/stock/\", {\r\n        pk: parseInt(e.target.getAttribute(\"stockid\")),\r\n      })\r\n      .then((resp) => {\r\n        console.log(resp);\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    axios\r\n      .get(\"http://localhost:8000/api/stock\")\r\n      .then((resp) => resp.data)\r\n      .then((data) => {\r\n        var itemsProcessed = 0;\r\n        var stocksId = [];\r\n        var stocks = [];\r\n\r\n        if (this.props.favorite) {\r\n          // CASO EM QUE QUEREMOS A TABELA DOS FAVORITOS\r\n          data.forEach((stock) => {\r\n            if (stock.favorite) {\r\n              stocksId.push(stock.pk);\r\n            }\r\n          });\r\n        } else {\r\n          data.forEach((stock) => {\r\n            if (!stock.favorite) {\r\n              stocksId.push(stock.pk);\r\n              // console.log(stock);\r\n            }\r\n          });\r\n        }\r\n        stocksId.forEach((id, index, array) => {\r\n          // console.log(id);\r\n          axios\r\n            .get(`http://localhost:8000/api/stock/update/${id}`)\r\n            .then((resp) => resp.data.updated_stock)\r\n            .then((stock) => {\r\n              // console.log(stock);\r\n              itemsProcessed++;\r\n              stocks.push(stock);\r\n              this.setState({\r\n                loadingProgress: (100 * itemsProcessed) / array.length,\r\n              });\r\n            })\r\n            .then(() => {\r\n              if (itemsProcessed === array.length) {\r\n                this.setState({\r\n                  isLoading: false,\r\n                  stocks: stocks,\r\n                });\r\n              }\r\n            });\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const content = this.state.isLoading ? (\r\n      <ProgressBarComponent loadingProgress={this.state.loadingProgress} />\r\n    ) : (\r\n      <Table className=\"text-dark\" size=\"sm\" striped responsive>\r\n        <thead>\r\n          <tr className=\"text-center\">\r\n            <th style={{ width: \"20%\" }}>Ativo</th>\r\n            <th style={{ width: \"20%\" }}>Preço</th>\r\n            <th style={{ width: \"20%\" }}>Variação(%)</th>\r\n            <th style={{ width: \"20%\" }}>Variação(R$)</th>\r\n            <th style={{ width: \"15%\" }}></th>\r\n            <th style={{ width: \"5%\" }}></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {this.state.stocks.map((stock) => {\r\n            let price = stock.price.toLocaleString(\"pt-BR\", {\r\n              style: \"currency\",\r\n              currency: \"BRL\",\r\n            });\r\n            let change = (\r\n              stock.price *\r\n              (stock.change_percent / 100)\r\n            ).toLocaleString(\"pt-BR\", {\r\n              style: \"currency\",\r\n              currency: \"BRL\",\r\n            });\r\n\r\n            let colorClass;\r\n            stock.change_percent > 0\r\n              ? (colorClass = \"success\")\r\n              : (colorClass = \"danger\");\r\n\r\n            return (\r\n              <tr className=\"text-center\" key={stock.pk}>\r\n                <td style={{ fontSize: \"18px\" }} className=\"align-middle\">\r\n                  {stock.symbol}\r\n                </td>\r\n                <td style={{ fontSize: \"18px\" }} className=\"align-middle\">\r\n                  {price}\r\n                </td>\r\n                <td className=\"align-middle\">\r\n                  <span\r\n                    style={{ fontSize: \"15px\" }}\r\n                    className={`badge-${colorClass} badge-pill align-middle`}\r\n                  >\r\n                    {stock.change_percent}%\r\n                  </span>\r\n                </td>\r\n                <td style={{ fontSize: \"15px\" }} className={`align-middle`}>\r\n                  {change}\r\n                </td>\r\n                <td style={{ fontSize: \"15px\" }} className=\"align-middle\">\r\n                  <Link to={`/stock/${stock.pk}`}>\r\n                    <Button size=\"sm\" variant=\"outline-info\">\r\n                      Gráfico\r\n                    </Button>\r\n                  </Link>\r\n                </td>\r\n                <td style={{ fontSize: \"18px\" }}>\r\n                  <Button\r\n                    className=\"float-left\"\r\n                    onClick={this.favoriteHandler}\r\n                    size=\"sm\"\r\n                    stockid={stock.pk.toString()}\r\n                    variant={stock.favorite ? \"outline-info\" : \"info\"}\r\n                  >\r\n                    {stock.favorite ? \"Desfavoritar\" : \"Favoritar\"}\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n    );\r\n    return <>{content}</>;\r\n  }\r\n}\r\n\r\nexport default StockTable;\r\n","import React, { Component } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport ProgressBarComponent from \"./ProgressBarComponent\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./StockTable.css\";\r\nimport axios from \"axios\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\n// Função que atualiza as informações do ativo dado um ID\r\n\r\nclass FavoriteCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // creating States\r\n    this.state = {\r\n      isLoading: true,\r\n      stocks: [],\r\n      loadingProgress: 0,\r\n      stocksId: [],\r\n    };\r\n    this.deleteHandler = this.deleteHandler.bind(this);\r\n    this.favoriteHandler = this.favoriteHandler.bind(this);\r\n  }\r\n\r\n  favoriteHandler(e) {\r\n    e.persist();\r\n\r\n    if (e.target.classList.contains(\"btn-outline-info\")) {\r\n      e.target.classList.replace(\"btn-outline-info\", \"btn-info\");\r\n      e.target.firstChild.data = \"Favoritar\";\r\n    } else {\r\n      e.target.classList.replace(\"btn-info\", \"btn-outline-info\");\r\n      e.target.firstChild.data = \"Desfavoritar\";\r\n    }\r\n    axios\r\n      .put(\"http://localhost:8000/api/stock/\", {\r\n        pk: parseInt(e.target.getAttribute(\"stockid\")),\r\n      })\r\n      .then((resp) => {\r\n        console.log(resp);\r\n      });\r\n  }\r\n\r\n  deleteHandler(e) {\r\n    axios\r\n      .delete(\"http://localhost:8000/api/stock/\", {\r\n        pk: e.target.getAttribute(\"id\"),\r\n        hello: \"hahah\",\r\n        asdhasi: \"asoidhasu\",\r\n      })\r\n      .then((resp) => {\r\n        resp.status === 201\r\n          ? alert(\"Ativo deletado com sucesso\")\r\n          : alert(\"Ops, houve algum erro\");\r\n      });\r\n  }\r\n  componentDidMount() {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    axios\r\n      .get(\"http://localhost:8000/api/stock/\")\r\n      .then((resp) => resp.data)\r\n      .then((data) => {\r\n        var itemsProcessed = 0;\r\n        var stocksId = [];\r\n        var stocks = [];\r\n\r\n        if (this.props.favorite) {\r\n          // CASO EM QUE QUEREMOS A TABELA DOS FAVORITOS\r\n          data.forEach((stock) => {\r\n            if (stock.favorite) {\r\n              stocksId.push(stock.pk);\r\n            }\r\n          });\r\n        }\r\n        stocksId.forEach((id, index, array) => {\r\n          axios\r\n            .get(`http://localhost:8000/api/stock/update/${id}`)\r\n            .then((resp) => resp.data.updated_stock)\r\n            .then((stock) => {\r\n              itemsProcessed++;\r\n              stocks.push(stock);\r\n              this.setState({\r\n                loadingProgress: (100 * itemsProcessed) / array.length,\r\n              });\r\n            })\r\n            .then(() => {\r\n              if (itemsProcessed === array.length) {\r\n                this.setState({\r\n                  isLoading: false,\r\n                  stocks: stocks,\r\n                });\r\n              }\r\n            });\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    // const size = this.props.favorite ? \"xl\" : \"sm\";\r\n    const content = this.state.isLoading ? (\r\n      // <Row className=\"mt-2\">\r\n      <Container>\r\n        <Col style={{ width: \"100%\" }} sm={12}>\r\n          <ProgressBarComponent loadingProgress={this.state.loadingProgress} />\r\n        </Col>\r\n      </Container>\r\n    ) : // </Row>\r\n    this.state.stocks.length > 0 ? (\r\n      this.state.stocks.map((stock) => {\r\n        let price = stock.price.toLocaleString(\"pt-BR\", {\r\n          style: \"currency\",\r\n          currency: \"BRL\",\r\n        });\r\n        // let change = (\r\n        //   stock.price *\r\n        //   (stock.change_percent / 100)\r\n        // ).toLocaleString(\"pt-BR\", {\r\n        //   style: \"currency\",\r\n        //   currency: \"BRL\",\r\n        // });\r\n\r\n        let colorClass;\r\n        stock.change_percent > 0\r\n          ? (colorClass = \"success\")\r\n          : (colorClass = \"danger\");\r\n\r\n        return (\r\n          <div\r\n            key={stock.pk}\r\n            className=\"col-xl-3 col-lg-4 col-md-6 col-sm-12 p-3\"\r\n          >\r\n            <div className=\"card mt-1 text-white\">\r\n              <div className=\"mb-2\">\r\n                {/* <Col className=\"\"> */}\r\n                <div\r\n                  className={`badge bg-info z-depth-4 py-1 px-4 ml-4 mt-n2 rounded`}\r\n                >\r\n                  <h4 className=\"text-white\">{stock.symbol}</h4>\r\n                </div>\r\n                <p className=\"float-right text-uppercase text-white p-2 mb-1\">\r\n                  <small>{stock.name.substr(0, 32)}</small>\r\n                </p>\r\n                {/* </Col> */}\r\n                <Col className=\"d-flex justify-content-end\">\r\n                  {/* <p className=\"text-uppercase text-muted mb-1\">\r\n                    <small>{stock.name}</small>\r\n                  </p> */}\r\n                  <p className=\"text-uppercase text-muted mb-1\">\r\n                    <small>Cotação</small>\r\n                  </p>\r\n                </Col>\r\n                <Col className=\"d-flex justify-content-end\">\r\n                  <h4 className=\"font-weight-bold mb-0\">\r\n                    {price}\r\n                    <span\r\n                      className={`badge badge-pill ml-1 badge-${colorClass}`}\r\n                    >\r\n                      {stock.change_percent}%\r\n                    </span>\r\n                  </h4>\r\n                </Col>\r\n              </div>\r\n              <div className=\"card-body pt-0\">\r\n                <Row className=\"mt-1 justify-content-around\">\r\n                  <Button\r\n                    id={stock.pk}\r\n                    onClick={this.deleteHandler}\r\n                    size=\"sm\"\r\n                    variant=\"outline-info\"\r\n                  >\r\n                    Deletar\r\n                  </Button>\r\n                  <Link className=\"\" to={`/stock/${stock.pk}`}>\r\n                    <Button size=\"sm\" variant=\"outline-info\">\r\n                      Gráfico\r\n                    </Button>\r\n                  </Link>\r\n                  <Button\r\n                    className=\"\"\r\n                    onClick={this.favoriteHandler}\r\n                    size=\"sm\"\r\n                    stockid={stock.pk}\r\n                    variant={stock.favorite ? \"outline-info\" : \"info\"}\r\n                  >\r\n                    {stock.favorite ? \"Desfavoritar\" : \"Favoritar\"}\r\n                  </Button>\r\n                </Row>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      })\r\n    ) : (\r\n      <div> Você não possui ações favoritas</div>\r\n    );\r\n    return <>{content}</>;\r\n  }\r\n}\r\n\r\nexport default FavoriteCard;\r\n","import React, { useState } from \"react\";\r\n\r\nconst PieChartComponent = (props) => {\r\n  const [Options, setOptions] = useState(null);\r\n  const key = \"JLXK7AOR79EQNKJ5\";\r\n  const url = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${props.stock}.SA&outputsize=full&apikey=${key}`;\r\n\r\n  return <div></div>;\r\n};\r\n\r\nexport default PieChartComponent;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Col, Badge } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Slider from \"react-slick\";\r\n\r\nclass SubNavbar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      indexes: [\r\n        {\r\n          name: \"Bovespa\",\r\n          country: \"brazil\",\r\n        },\r\n        {\r\n          name: \"S&P 500\",\r\n          country: \"united states\",\r\n        },\r\n        {\r\n          name: \"Nasdaq\",\r\n          country: \"united states\",\r\n        },\r\n        {\r\n          name: \"Dow 30\",\r\n          country: \"united states\",\r\n        },\r\n      ],\r\n      data2: [],\r\n      forexes: [\r\n        {\r\n          name: \"USD\",\r\n        },\r\n        {\r\n          name: \"EUR\",\r\n        },\r\n        {\r\n          name: \"GBP\",\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    var itemsProcessed = 0;\r\n    var itemsProcessed2 = 0;\r\n    var data = [];\r\n    this.state.indexes.forEach((item, index, array) => {\r\n      axios\r\n        .get(\"http://localhost:8000/api/index/get/\", {\r\n          params: { name: item.name, country: item.country },\r\n        })\r\n        .then((resp) => {\r\n          itemsProcessed = itemsProcessed + 1;\r\n          console.log(resp.data.object);\r\n          data.push(resp.data.object);\r\n        })\r\n        .then(() => {\r\n          if (itemsProcessed === array.length) {\r\n            this.setState({ data: data });\r\n          }\r\n        });\r\n    });\r\n    this.state.forexes.forEach((item, index, array) => {\r\n      axios\r\n        .get(\"http://localhost:8000/api/forex/get/\", {\r\n          params: { name: item.name },\r\n        })\r\n        .then((resp) => {\r\n          itemsProcessed2 = itemsProcessed2 + 1;\r\n          console.log(resp.data.object);\r\n          data.push(resp.data.object);\r\n        })\r\n        .then(() => {\r\n          if (itemsProcessed2 === array.length) {\r\n            this.setState({ data2: data });\r\n          }\r\n        });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const settings = {\r\n      className: \"mt-2\",\r\n      dots: true,\r\n      infinite: true,\r\n      speed: 1500,\r\n      slidesToShow: 4,\r\n      slidesToScroll: 3,\r\n      autoplay: true,\r\n      autoplaySpeed: 3200,\r\n      responsive: [\r\n        {\r\n          breakpoint: 1600,\r\n          settings: {\r\n            slidesToShow: 3,\r\n          },\r\n        },\r\n        {\r\n          breakpoint: 1000,\r\n          settings: {\r\n            slidesToShow: 1,\r\n            slidesToScroll: 1,\r\n            autoplaySpeed: 1500,\r\n            speed: 500,\r\n          },\r\n        },\r\n      ],\r\n    };\r\n\r\n    return (\r\n      <Slider {...settings}>\r\n        {/* {this.state.data.map((object, index) => {\r\n          let colorClass = object.change_percent > 0 ? \"success\" : \"danger\";\r\n          return (\r\n            <Col key={`${index}`}>\r\n              <Card\r\n                bg=\"dark\"\r\n                text=\"light\"\r\n                className=\"z-depth-4 default-color mb-2\"\r\n              >\r\n                <Card.Body>\r\n                  <div className=\"d-flex justify-content-around\">\r\n                    <h3 className=\"float-left\">{object.name}</h3>\r\n                    <div className=\"d-flex justify-content-end\">\r\n                      <h3>\r\n                        {object.price}\r\n                        <Badge pill variant={colorClass} className=\"ml-2\">\r\n                          {object.change_percent}%\r\n                        </Badge>\r\n                      </h3>\r\n                    </div>\r\n                  </div>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          );\r\n        })} */}\r\n        {this.state.data2.map((object, index) => {\r\n          let colorClass = object.change_percent > 0 ? \"success\" : \"danger\";\r\n          return (\r\n            <Col key={`${index}`}>\r\n              <Card\r\n                bg=\"dark\"\r\n                text=\"light\"\r\n                className=\"z-depth-4 default-color mb-2\"\r\n              >\r\n                <Card.Body>\r\n                  <div className=\"d-flex justify-content-around\">\r\n                    <h5 className=\"float-left\">{object.name}</h5>\r\n                    <div className=\"d-flex justify-content-end\">\r\n                      <h5>\r\n                        R$ {object.price}\r\n                        <Badge pill variant={colorClass} className=\"ml-2\">\r\n                          {object.change_percent}%\r\n                        </Badge>\r\n                      </h5>\r\n                    </div>\r\n                  </div>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          );\r\n        })}\r\n      </Slider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SubNavbar;\r\n","import React, { Component } from \"react\";\r\nimport StockTable from \"./StockTable\";\r\nimport FavoriteCard from \"./FavoriteCard\";\r\nimport PieChartComponent from \"./PieChart\";\r\nimport SubNavbar from \"./SubNavbar\";\r\n\r\n// Grid Layout\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\n// Card Layout\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nclass DashboardComponent extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <SubNavbar />\r\n        <Container fluid>\r\n          <Row className=\"mt-4\">\r\n            {/* <Card style={{ width: \"100vw\" }}>\r\n                <Card.Header>\r\n                  <h3>Seus Favoritos</h3>\r\n                </Card.Header>\r\n                <Card.Body> */}\r\n            <FavoriteCard favorite={true} />\r\n            {/* </Card.Body>\r\n              </Card> */}\r\n          </Row>\r\n          <Row>\r\n            <Col sm={4}>\r\n              <Row>\r\n                <Col>\r\n                  <PieChartComponent />\r\n                </Col>\r\n              </Row>\r\n              <Row>{/* <Col>Gráfico 2</Col> */}</Row>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"mt-4\">\r\n            <Col sm={5} className=\"\">\r\n              <Card bg=\"light\" text=\"dark\">\r\n                <Card.Header>\r\n                  <h3>Outras ações</h3>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <StockTable favorite={false} />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col sm={7}></Col>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DashboardComponent;\r\n","import React from \"react\";\r\nimport { Card, Badge } from \"react-bootstrap\";\r\n\r\nconst InfoCard = (props) => {\r\n  const colorClass = props.percentageValue > 0 ? \"success\" : \"danger\";\r\n\r\n  return (\r\n    <Card bg=\"dark\" text=\"light\" className=\"z-depth-2 my-3\">\r\n      <div className=\"\">\r\n        <span\r\n          className=\"px-2 ml-3 py-2 mt-n3 rounded unique-color\"\r\n          style={{ fontSize: \"20px\", color: \"white\" }}\r\n        >\r\n          {props.title.toUpperCase()}\r\n        </span>\r\n        <div className=\"float-right text-right p-3\">\r\n          <p className=\"text-uppercase mb-1\">\r\n            {/* <small> */}\r\n            {props.description} {props.descriptionValue}\r\n            {/* </small> */}\r\n          </p>\r\n          <h4 className=\"font-weight-bold mb-0\">\r\n            {props.value}\r\n            <Badge pill className={`ml-1 badge-${colorClass}`}>\r\n              {props.percentage}\r\n            </Badge>\r\n          </h4>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className={`card-body badge-${colorClass} m-2 mb-n2 rounded pt-0`}\r\n      ></div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default InfoCard;\r\n","import React, { Fragment } from \"react\";\r\nimport { Form, Table } from \"react-bootstrap\";\r\nimport {\r\n  MDBBtn,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBModalFooter,\r\n  MDBContainer,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBInput,\r\n} from \"mdbreact\";\r\nimport axios from \"axios\";\r\n\r\nconst WalletTable = (props) => {\r\n  const [ModalEdit, setModalEdit] = React.useState(false);\r\n  const [ModalAdd, setModalAdd] = React.useState(false);\r\n  const [Stock, setStock] = React.useState(\"\");\r\n  const [Amount, setAmount] = React.useState(0);\r\n  const [Investment, setInvestment] = React.useState(0);\r\n  const [Broker, setBroker] = React.useState(\"\");\r\n  const [EditId, setEditId] = React.useState(0);\r\n  const [BuyDate, setBuyDate] = React.useState(\"\");\r\n\r\n  React.useEffect(() => {}, []);\r\n  const handleStockAmountChange = (e) => {\r\n    setAmount(parseInt(e.target.value));\r\n  };\r\n\r\n  const handleStockChange = (e) => {\r\n    setStock(e.target.value.toUpperCase());\r\n  };\r\n\r\n  const handleInvestmentChange = (e) => {\r\n    setInvestment(parseFloat(e.target.value));\r\n  };\r\n\r\n  const handleBrokerChange = (e) => {\r\n    setBroker(e.target.value);\r\n  };\r\n\r\n  const toggleModalAdd = () => {\r\n    setModalAdd(!ModalAdd);\r\n  };\r\n\r\n  const toggleModalEdit = (e) => {\r\n    let id = parseInt(e.target.getAttribute(\"id\"));\r\n    // var obj = props.data.find(function (o) {\r\n    //   return o.pk === id;\r\n    // });\r\n    setEditId(id);\r\n    setModalEdit(!ModalEdit);\r\n    // ModalEdit ? console.log(\"closed\") : console.log(\"opened\");\r\n  };\r\n\r\n  const deleteWalletItem = (e) => {\r\n    let id = parseInt(e.target.getAttribute(\"id\"));\r\n    var object = props.data.find(function (o) {\r\n      return o.pk === id;\r\n    });\r\n    window.confirm(\r\n      `Deseja mesmo excluir o item ${object.stock.name} (${object.stock.symbol}) da sua carteira?`\r\n    )\r\n      ? axios\r\n          .delete(\"http://localhost:8000/api/wallet/\", {\r\n            params: {\r\n              pk: e.target.getAttribute(\"id\"),\r\n            },\r\n          })\r\n          .then((resp) => {\r\n            resp.status === 201\r\n              ? alert(\"Ativo deletado com sucesso\")\r\n              : alert(\"Ops, houve algum erro\");\r\n          })\r\n          .then(() => {\r\n            props.cb(\"item excluído\");\r\n          })\r\n      : console.log(\"Cancelado\");\r\n  };\r\n\r\n  const editWalletItem = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .put(\"http://localhost:8000/api/wallet/\", {\r\n        pk: EditId,\r\n        stock_amount: Amount,\r\n        investment: Investment,\r\n      })\r\n      .then((resp) => {\r\n        alert(\"Item Editado com sucesso\");\r\n        console.log(resp);\r\n        props.cb(\"item editado\");\r\n      });\r\n  };\r\n\r\n  const submitWalletItem = (e) => {\r\n    e.preventDefault();\r\n    // console.log(Stock, Amount, Investment, Broker, props.owner);\r\n    axios\r\n      .post(\"http://localhost:8000/api/wallet/\", {\r\n        stock_amount: Amount,\r\n        symbol: Stock,\r\n        investment: Investment,\r\n        broker: Broker,\r\n        owner: props.owner,\r\n        buy_date: BuyDate,\r\n      })\r\n      .then((resp) => {\r\n        console.log(resp);\r\n        if (resp.status === 201) {\r\n          alert(\"Ação adicionada ao sua carteira\");\r\n        }\r\n      })\r\n      .then(() => {\r\n        props.cb(\"item adicionado\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex justify-content-between mb-2\">\r\n        <h4 className=\"d-flex flex-column justify-content-center\">\r\n          Ativos na carteira\r\n        </h4>\r\n        <Fragment>\r\n          <MDBBtn onClick={toggleModalAdd} color=\"elegant\">\r\n            Adicionar Ativo\r\n          </MDBBtn>\r\n        </Fragment>\r\n      </div>\r\n      <Table className=\"text-dark\" size=\"sm\" striped responsive>\r\n        <thead>\r\n          <tr className=\"text-center\">\r\n            <th></th>\r\n            <th>Corretora</th>\r\n            <th>Proprietário</th>\r\n            <th>Ativo</th>\r\n            <th>Preço de Compra</th>\r\n            <th>Quantidade</th>\r\n            <th>Investimento</th>\r\n            <th>Preço Atual</th>\r\n            <th>Patrimônio</th>\r\n            <th>Desempenho(%)</th>\r\n            <th>Desempenho(R$)</th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.data.map((item, index, array) => {\r\n            let change_percent =\r\n              Math.round(\r\n                ((item.money_amount - item.investment) * 10000) /\r\n                  item.investment\r\n              ) / 100;\r\n            let colorClass = change_percent > 0 ? \"success\" : \"danger\";\r\n            return (\r\n              <tr\r\n                key={index}\r\n                className=\"text-center\"\r\n                // onClick={editWalletItem}\r\n              >\r\n                <td className=\"align-middle\">\r\n                  <i\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={toggleModalEdit}\r\n                    id={item.pk}\r\n                    className=\"fas fa-edit align-middle\"\r\n                  ></i>\r\n                </td>\r\n                <td className=\"align-middle\">{item.broker}</td>\r\n                <td className=\"align-middle\">{item.owner}</td>\r\n                <td className=\"align-middle\">{`${item.stock.name} (${item.stock.symbol})`}</td>\r\n                <td className=\"align-middle\">\r\n                  {item.buy_price.toLocaleString(\"en-US\", {\r\n                    style: \"currency\",\r\n                    currency: \"BRL\",\r\n                  })}\r\n                </td>\r\n                <td className=\"align-middle\">{item.stock_amount}</td>\r\n                <td className=\"align-middle\">\r\n                  {item.investment.toLocaleString(\"en-US\", {\r\n                    style: \"currency\",\r\n                    currency: \"BRL\",\r\n                  })}\r\n                </td>\r\n                <td className=\"align-middle\">\r\n                  {item.stock.price.toLocaleString(\"en-US\", {\r\n                    style: \"currency\",\r\n                    currency: \"BRL\",\r\n                  })}\r\n                </td>\r\n                <td className=\"align-middle\">\r\n                  {item.money_amount.toLocaleString(\"en-US\", {\r\n                    style: \"currency\",\r\n                    currency: \"BRL\",\r\n                  })}\r\n                </td>\r\n                <td className=\"align-middle\">\r\n                  <span className={`badge-pill badge-${colorClass}`}>\r\n                    {change_percent} %\r\n                  </span>\r\n                </td>\r\n                <td className={`align-middle text-${colorClass}`}>\r\n                  {(item.money_amount - item.investment).toLocaleString(\r\n                    \"en-US\",\r\n                    {\r\n                      style: \"currency\",\r\n                      currency: \"BRL\",\r\n                    }\r\n                  )}\r\n                </td>\r\n                <td className=\"align-middle\">\r\n                  <i\r\n                    style={{ cursor: \"pointer\" }}\r\n                    id={item.pk}\r\n                    onClick={deleteWalletItem}\r\n                    className=\"align-middle fas fa-times\"\r\n                  ></i>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n\r\n      {/* ADD MODAL */}\r\n\r\n      <MDBModal isOpen={ModalAdd} toggle={toggleModalAdd}>\r\n        <MDBModalHeader toggle={toggleModalAdd}>\r\n          Custódia de Ações\r\n        </MDBModalHeader>\r\n        <MDBModalBody>\r\n          <MDBContainer>\r\n            <MDBRow className=\"d-flex justify-content-center\">\r\n              <MDBCol md=\"6\">\r\n                <form onSubmit={submitWalletItem}>\r\n                  <div className=\"grey-text\">\r\n                    <MDBInput\r\n                      label=\"Ativo Comprado\"\r\n                      icon=\"\"\r\n                      group\r\n                      style={{ fontSize: \"20px\" }}\r\n                      type=\"text\"\r\n                      onChange={handleStockChange}\r\n                    />\r\n                    <div className=\"md-form\">\r\n                      <input\r\n                        type=\"date\"\r\n                        name=\"transaction-date\"\r\n                        className=\"form-control\"\r\n                        id=\"transaction-date\"\r\n                        onChange={(e) => setBuyDate(e.target.value)}\r\n                        required\r\n                      />\r\n                    </div>\r\n                    <MDBInput\r\n                      label=\"Quantidade de Ações\"\r\n                      icon=\"\"\r\n                      style={{ fontSize: \"20px\" }}\r\n                      group\r\n                      type=\"text\"\r\n                      error=\"wrong\"\r\n                      success=\"right\"\r\n                      onChange={handleStockAmountChange}\r\n                    />\r\n                    <MDBInput\r\n                      label=\"Capital Investido\"\r\n                      icon=\"\"\r\n                      style={{ fontSize: \"20px\" }}\r\n                      group\r\n                      type=\"text\"\r\n                      onChange={handleInvestmentChange}\r\n                    />\r\n\r\n                    <Form.Group controlId=\"formBasicCheckbox\">\r\n                      <Form.Control\r\n                        as=\"select\"\r\n                        custom\r\n                        defaultValue=\"\"\r\n                        onChange={handleBrokerChange}\r\n                      >\r\n                        <option value=\"\" disabled>\r\n                          Corretora da Operação\r\n                        </option>\r\n                        <option value=\"Ágora - Bradesco\">Ágora</option>\r\n                        <option value=\"Banco do Brasil\">Banco do Brasil</option>\r\n                      </Form.Control>\r\n                    </Form.Group>\r\n                  </div>\r\n                  <div className=\"text-center\">\r\n                    <MDBBtn type=\"submit\" onClick={toggleModalAdd}>\r\n                      Adicionar\r\n                    </MDBBtn>\r\n                  </div>\r\n                </form>\r\n              </MDBCol>\r\n            </MDBRow>\r\n          </MDBContainer>\r\n        </MDBModalBody>\r\n        <MDBModalFooter>\r\n          <MDBBtn\r\n            type=\"button\"\r\n            color=\"outline-elegant\"\r\n            onClick={toggleModalAdd}\r\n          >\r\n            Fechar\r\n          </MDBBtn>\r\n        </MDBModalFooter>\r\n      </MDBModal>\r\n\r\n      {/* EDIT MODAL */}\r\n      <MDBModal isOpen={ModalEdit} toggle={toggleModalEdit}>\r\n        <MDBModalHeader id=\"editModalHeader\" toggle={toggleModalEdit}>\r\n          Editando item da carteira\r\n        </MDBModalHeader>\r\n        <MDBModalBody>\r\n          <MDBContainer>\r\n            <MDBRow className=\"d-flex justify-content-center\">\r\n              <MDBCol md=\"6\">\r\n                <form onSubmit={editWalletItem}>\r\n                  <div className=\"grey-text\">\r\n                    <MDBInput\r\n                      label=\"Quantidade de Ações\"\r\n                      icon=\"\"\r\n                      style={{ fontSize: \"20px\" }}\r\n                      group\r\n                      type=\"text\"\r\n                      error=\"wrong\"\r\n                      success=\"right\"\r\n                      onChange={handleStockAmountChange}\r\n                    />\r\n                    <MDBInput\r\n                      label=\"Capital Investido\"\r\n                      icon=\"\"\r\n                      style={{ fontSize: \"20px\" }}\r\n                      group\r\n                      type=\"text\"\r\n                      onChange={handleInvestmentChange}\r\n                    />\r\n                  </div>\r\n                  <div className=\"text-center\">\r\n                    <MDBBtn type=\"submit\">Confirmar Edição</MDBBtn>\r\n                  </div>\r\n                </form>\r\n              </MDBCol>\r\n            </MDBRow>\r\n          </MDBContainer>\r\n        </MDBModalBody>\r\n        <MDBModalFooter>\r\n          <MDBBtn\r\n            type=\"button\"\r\n            color=\"outline-elegant\"\r\n            onClick={toggleModalEdit}\r\n          >\r\n            Fechar\r\n          </MDBBtn>\r\n        </MDBModalFooter>\r\n      </MDBModal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WalletTable;\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport {\r\n  MDBBtn,\r\n  MDBInput,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBContainer,\r\n  MDBModalFooter,\r\n} from \"mdbreact\";\r\nimport { Form, Table } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\nclass TransactionsTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Broker: \"\",\r\n      Operation: \"\",\r\n      Stock: \"\",\r\n      Date: \"\",\r\n      Document: \"\",\r\n      Data: \"\",\r\n      ModalAdd: false,\r\n    };\r\n    this.submitTransactionItem = this.submitTransactionItem.bind(this);\r\n  }\r\n\r\n  submitTransactionItem = (e) => {\r\n    e.preventDefault();\r\n    const uploadData = new FormData();\r\n    uploadData.append(\"broker\", this.state.Broker);\r\n    uploadData.append(\"operation\", this.state.Operation);\r\n    uploadData.append(\"date\", this.state.Date);\r\n    uploadData.append(\"document\", this.state.Document);\r\n    uploadData.append(\"stock\", this.state.Stock);\r\n    uploadData.append(\"owner\", this.props.owner);\r\n\r\n    axios\r\n      .post(\"http://localhost:8000/api/transaction/\", uploadData)\r\n      .then((resp) => resp.data)\r\n      .then((data) => {\r\n        console.log(data);\r\n      })\r\n      .then(() => {\r\n        this.props.cb(\"item adicionado\");\r\n      });\r\n  };\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:8000/api/transaction/\", {\r\n        params: {\r\n          owner: this.props.owner,\r\n        },\r\n      })\r\n      .then((resp) => resp.data)\r\n      .then((data) => {\r\n        console.log(data);\r\n        this.setState({\r\n          Data: data,\r\n        });\r\n      });\r\n  }\r\n  render() {\r\n    const content =\r\n      this.state.Data.length === 0 ? (\r\n        <tr>\r\n          <td>Loading</td>\r\n        </tr>\r\n      ) : (\r\n        this.state.Data.map((item, index) => {\r\n          return (\r\n            <tr key={index}>\r\n              <td>{item.date}</td>\r\n              <td>{item.broker}</td>\r\n              <td>{item.operation}</td>\r\n              <td>{item.stock}</td>\r\n              <td>\r\n                <a href={item.document} download>\r\n                  <i className=\"fas fa-file-download\"></i>\r\n                </a>\r\n              </td>\r\n            </tr>\r\n          );\r\n        })\r\n      );\r\n    return (\r\n      <>\r\n        <div className=\"d-flex justify-content-between mb-2\">\r\n          <h4 className=\"d-flex flex-column justify-content-center\">\r\n            Ativos na carteira\r\n          </h4>\r\n          <Fragment>\r\n            <MDBBtn\r\n              onClick={() => this.setState({ ModalAdd: !this.state.ModalAdd })}\r\n              color=\"elegant\"\r\n            >\r\n              Adicionar Ativo\r\n            </MDBBtn>\r\n          </Fragment>\r\n        </div>\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th>Data</th>\r\n              <th>Corretora</th>\r\n              <th>Operação</th>\r\n              <th>Ativo</th>\r\n              <th>Nota de Corretagem</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{content}</tbody>\r\n        </Table>\r\n        <MDBModal\r\n          isOpen={this.state.ModalAdd}\r\n          toggle={() => this.setState({ ModalAdd: !this.state.ModalAdd })}\r\n        >\r\n          <MDBModalHeader\r\n            toggle={() => this.setState({ ModalAdd: !this.state.ModalAdd })}\r\n          >\r\n            Custódia de Ações\r\n          </MDBModalHeader>\r\n          <MDBModalBody>\r\n            <MDBContainer>\r\n              <MDBRow className=\"d-flex justify-content-center\">\r\n                <MDBCol md=\"6\">\r\n                  <form\r\n                    encType=\"multipart/form-data\"\r\n                    onSubmit={this.submitTransactionItem}\r\n                  >\r\n                    <div className=\"grey-text\">\r\n                      <MDBInput\r\n                        label=\"Ativo Comprado\"\r\n                        icon=\"\"\r\n                        group\r\n                        style={{ fontSize: \"20px\" }}\r\n                        type=\"text\"\r\n                        onChange={(e) =>\r\n                          this.setState({ Stock: e.target.value })\r\n                        }\r\n                      />\r\n                      <div className=\"md-form\">\r\n                        <input\r\n                          type=\"date\"\r\n                          name=\"transaction-date\"\r\n                          className=\"form-control\"\r\n                          id=\"transaction-date\"\r\n                          onChange={(e) =>\r\n                            this.setState({ Date: e.target.value })\r\n                          }\r\n                          required\r\n                        />\r\n                      </div>\r\n\r\n                      <Form.Group controlId=\"formBasicCheckbox\">\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          custom\r\n                          defaultValue=\"\"\r\n                          onChange={(e) =>\r\n                            this.setState({ Broker: e.target.value })\r\n                          }\r\n                        >\r\n                          <option value=\"\" disabled>\r\n                            Corretora da Operação\r\n                          </option>\r\n                          <option value=\"Ágora - Bradesco\">Ágora</option>\r\n                          <option value=\"Banco do Brasil\">\r\n                            Banco do Brasil\r\n                          </option>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n\r\n                      <Form.Group controlId=\"formBasicCheckbox\">\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          custom\r\n                          defaultValue=\"\"\r\n                          onChange={(e) =>\r\n                            this.setState({ Operation: e.target.value })\r\n                          }\r\n                        >\r\n                          <option value=\"\" disabled>\r\n                            Operação\r\n                          </option>\r\n                          <option value=\"Compra\">Compra</option>\r\n                          <option value=\"Venda\">Venda</option>\r\n                          <option value=\"Compra e Venda\">Compra e Venda</option>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                      <Form.File\r\n                        id=\"custom-file\"\r\n                        label=\"Nota de Corretagem\"\r\n                        onChange={(e) =>\r\n                          this.setState({ Document: e.target.files[0] })\r\n                        }\r\n                        custom\r\n                      />\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                      <MDBBtn\r\n                        type=\"submit\"\r\n                        onClick={() =>\r\n                          this.setState({ ModalAdd: !this.state.ModalAdd })\r\n                        }\r\n                      >\r\n                        Adicionar\r\n                      </MDBBtn>\r\n                    </div>\r\n                  </form>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </MDBContainer>\r\n          </MDBModalBody>\r\n          <MDBModalFooter>\r\n            <MDBBtn\r\n              type=\"button\"\r\n              color=\"outline-elegant\"\r\n              onClick={() => this.setState({ ModalAdd: !this.state.ModalAdd })}\r\n            >\r\n              Fechar\r\n            </MDBBtn>\r\n          </MDBModalFooter>\r\n        </MDBModal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TransactionsTable;\r\n","import React from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\n\r\nclass WalletAllocationChart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      options: {\r\n        chart: {\r\n          type: \"donut\",\r\n          height: \"250px\",\r\n        },\r\n        animations: {\r\n          enabled: true,\r\n          easing: \"easeinout\",\r\n          speed: 800,\r\n          animateGradually: {\r\n            enabled: true,\r\n            delay: 150,\r\n          },\r\n          dynamicAnimation: {\r\n            enabled: true,\r\n            speed: 350,\r\n          },\r\n        },\r\n        title: {\r\n          text: \"Distribuição da carteira\",\r\n          align: \"center\",\r\n          style: {\r\n            fontFamily: \"Oswald\",\r\n            fontSize: \"22px\",\r\n          },\r\n        },\r\n        plotOptions: {\r\n          pie: {\r\n            donut: {\r\n              labels: {\r\n                show: true,\r\n                name: {\r\n                  show: true,\r\n                  fontFamily: \"Oswald\",\r\n                  fontSize: \"26px\",\r\n                },\r\n                value: {\r\n                  show: true,\r\n                  fontSize: \"26px\",\r\n                  fontFamily: \"Oswald\",\r\n                  formatter: function (val) {\r\n                    let amount = parseFloat(val).toLocaleString(\"en-US\", {\r\n                      style: \"currency\",\r\n                      currency: \"BRL\",\r\n                    });\r\n                    return `${amount}`;\r\n                  },\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n        legend: {\r\n          show: true,\r\n          position: \"bottom\",\r\n        },\r\n        colors: [\r\n          \"#2E93fA\",\r\n          \"#66DA26\",\r\n          \"#546E7A\",\r\n          \"#E91E63\",\r\n          \"#FF9800\",\r\n          \"#00B746\",\r\n          \"#EF403C\",\r\n          \"#3D3D3D\",\r\n        ],\r\n        dataLabels: {\r\n          enabled: true,\r\n          formatter: function (val) {\r\n            return Math.round(val * 100, 2) / 100 + \"%\";\r\n          },\r\n        },\r\n        responsive: [\r\n          {\r\n            breakpoint: 480,\r\n            options: {\r\n              chart: {\r\n                width: 200,\r\n              },\r\n              legend: {\r\n                position: \"bottom\",\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      series: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    var lab = [];\r\n    var ser = [];\r\n    this.props.data.forEach((item) => {\r\n      ser.push(item.money_amount);\r\n      lab.push(item.stock.symbol);\r\n    });\r\n    this.setState({\r\n      series: ser,\r\n      options: {\r\n        labels: lab,\r\n      },\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"chart\">\r\n        <ReactApexChart\r\n          options={this.state.options}\r\n          series={this.state.series}\r\n          type=\"donut\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WalletAllocationChart;\r\n","import React from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\n\r\nclass WalletYield extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      options: {\r\n        chart: {\r\n          type: \"bar\",\r\n          height: 250,\r\n        },\r\n        plotOptions: {\r\n          bar: {\r\n            horizontal: false,\r\n            dataLabels: {\r\n              position: \"top\",\r\n            },\r\n          },\r\n        },\r\n        dataLabels: {\r\n          enabled: true,\r\n          offsetX: -6,\r\n          formatter: function (val) {\r\n            return Math.round(val * 100, 2) / 100 + \"%\";\r\n          },\r\n          style: {\r\n            fontSize: \"12px\",\r\n            colors: [\"#fff\"],\r\n          },\r\n        },\r\n        stroke: {\r\n          show: true,\r\n          width: 1,\r\n          colors: [\"#fff\"],\r\n        },\r\n        animations: {\r\n          enabled: true,\r\n          easing: \"easeinout\",\r\n          speed: 800,\r\n          animateGradually: {\r\n            enabled: true,\r\n            delay: 150,\r\n          },\r\n          dynamicAnimation: {\r\n            enabled: true,\r\n            speed: 350,\r\n          },\r\n        },\r\n        title: {\r\n          text: \"Comparativo - Ibovespa/Carteira\",\r\n          align: \"center\",\r\n          style: {\r\n            fontFamily: \"Oswald\",\r\n            fontSize: \"22px\",\r\n          },\r\n        },\r\n        responsive: [\r\n          {\r\n            breakpoint: 480,\r\n            options: {\r\n              chart: {\r\n                width: 200,\r\n              },\r\n              legend: {\r\n                position: \"bottom\",\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      series: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    var lab = [];\r\n    var ser1 = [];\r\n    var ser2 = [];\r\n    this.props.data.forEach((item) => {\r\n      ser1.push(item.change_percent);\r\n      ser2.push(item.ibovespa_change);\r\n      lab.push(item.stock.symbol);\r\n    });\r\n    this.setState({\r\n      series: [\r\n        { name: \"Rendimento\", data: ser1 },\r\n        { name: \"Ibovespa\", data: ser2 },\r\n      ],\r\n      options: {\r\n        labels: lab,\r\n      },\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"chart\">\r\n        <ReactApexChart\r\n          options={this.state.options}\r\n          series={this.state.series}\r\n          type=\"bar\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WalletYield;\r\n","import React from \"react\";\r\nimport {\r\n  Row,\r\n  Card,\r\n  Spinner,\r\n  Container,\r\n  Form,\r\n  Col,\r\n  Tab,\r\n  Nav,\r\n} from \"react-bootstrap\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn } from \"mdbreact\";\r\nimport InfoCard from \"./InfoCard\";\r\nimport WalletTable from \"./WalletTable\";\r\nimport TransactionsTable from \"./TransactionsTable\";\r\nimport WalletAllocationChart from \"./WalletAllocationChart\";\r\nimport WalletYield from \"./WalletYield\";\r\nimport axios from \"axios\";\r\n// import { MDBBtn } from \"mdbreact\";\r\n\r\nclass WalletComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Loading: false,\r\n      Wallet: [],\r\n      Owner: \"\",\r\n      TotalAmount: 0,\r\n      TotalInvestment: 0,\r\n      TotalChangePct: 0,\r\n      MaxStockChange: {},\r\n      MinStockChange: {},\r\n      noData: false,\r\n      stockAmout: 0,\r\n      investment: 0,\r\n      stock: \"\",\r\n      broker: \"\",\r\n      buy_date: \"\",\r\n    };\r\n\r\n    this.handleOwnerChange = this.handleOwnerChange.bind(this);\r\n    this.walletChangeCallback = this.walletChangeCallback.bind(this);\r\n    this.submitWalletItem = this.submitWalletItem.bind(this);\r\n  }\r\n\r\n  // var total_money_amount = 0;\r\n  // var total_investment = 0;\r\n  // var total_change_pct = 0;\r\n  // const [Loading, setLoading] = useState(false);\r\n  // const [Wallet, setWallet] = useState([]);\r\n  // const [Owner, setOwner] = useState(\"\");\r\n\r\n  handleOwnerChange = (e) => {\r\n    this.setState({\r\n      Owner: e.target.value,\r\n    });\r\n    // console.log(this.state.Owner);\r\n    this.setState({\r\n      Loading: true,\r\n    });\r\n    axios\r\n      .get(\"http://localhost:8000/api/wallet/\", {\r\n        params: {\r\n          owner: e.target.value,\r\n        },\r\n      })\r\n      .then((resp) => resp.data)\r\n      .then((data) => {\r\n        // console.log(data);\r\n        //calculating higher\r\n        var higher = Math.max.apply(\r\n          Math,\r\n          data.map(function (obj) {\r\n            return obj.change_percent;\r\n          })\r\n        );\r\n        var object = data.find(function (o) {\r\n          return o.change_percent === higher;\r\n        });\r\n\r\n        // ... and min\r\n        var min = Math.min.apply(\r\n          Math,\r\n          data.map(function (obj) {\r\n            return obj.change_percent;\r\n          })\r\n        );\r\n        var object2 = data.find(function (o) {\r\n          return o.change_percent === min;\r\n        });\r\n\r\n        //calculating totals\r\n        let amount = data.reduce((sum, currentValue) => {\r\n          return currentValue.money_amount + sum;\r\n        }, 0);\r\n        let investment = data.reduce((sum, currentValue) => {\r\n          return currentValue.investment + sum;\r\n        }, 0);\r\n        let change =\r\n          Math.round((10000 * (amount - investment)) / investment, 2) / 100;\r\n\r\n        // setting states\r\n        this.setState({\r\n          Wallet: data,\r\n          TotalAmount: amount,\r\n          TotalInvestment: investment,\r\n          TotalChangePct: change,\r\n          MaxStockChange: object,\r\n          MinStockChange: object2,\r\n        });\r\n        return data;\r\n      })\r\n      .then((data) => {\r\n        if (data.length > 0) {\r\n          this.setState({\r\n            Loading: false,\r\n            noData: false,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            Loading: false,\r\n            noData: true,\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  walletChangeCallback = (msg) => {\r\n    this.setState({\r\n      Loading: true,\r\n    });\r\n    axios\r\n      .get(\"http://localhost:8000/api/wallet/\", {\r\n        params: {\r\n          owner: this.state.Owner,\r\n        },\r\n      })\r\n      .then((resp) => resp.data)\r\n      .then((data) => {\r\n        //calculating higher\r\n        var higher = Math.max.apply(\r\n          Math,\r\n          data.map(function (obj) {\r\n            return obj.change_percent;\r\n          })\r\n        );\r\n        var object = data.find(function (o) {\r\n          return o.change_percent === higher;\r\n        });\r\n\r\n        // ... and min\r\n        var min = Math.min.apply(\r\n          Math,\r\n          data.map(function (obj) {\r\n            return obj.change_percent;\r\n          })\r\n        );\r\n        var object2 = data.find(function (o) {\r\n          return o.change_percent === min;\r\n        });\r\n\r\n        //calculating totals\r\n        let amount = data.reduce((sum, currentValue) => {\r\n          return currentValue.money_amount + sum;\r\n        }, 0);\r\n        let investment = data.reduce((sum, currentValue) => {\r\n          return currentValue.investment + sum;\r\n        }, 0);\r\n        let change =\r\n          Math.round((10000 * (amount - investment)) / investment, 2) / 100;\r\n\r\n        // setting states\r\n        this.setState({\r\n          Wallet: data,\r\n          TotalAmount: amount,\r\n          TotalInvestment: investment,\r\n          TotalChangePct: change,\r\n          MaxStockChange: object,\r\n          MinStockChange: object2,\r\n        });\r\n        return data;\r\n      })\r\n      .then((data) => {\r\n        if (data.length > 0) {\r\n          this.setState({\r\n            Loading: false,\r\n            noData: false,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            Loading: false,\r\n            noData: true,\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  submitWalletItem = (e) => {\r\n    e.preventDefault();\r\n    // console.log(Stock, Amount, Investment, Broker, props.owner);\r\n    axios\r\n      .post(\"http://localhost:8000/api/wallet/\", {\r\n        stock_amount: this.state.stockAmount,\r\n        symbol: this.state.stock,\r\n        investment: this.state.investment,\r\n        broker: this.state.broker,\r\n        owner: this.state.Owner,\r\n        buy_date: this.state.buy_date,\r\n      })\r\n      .then((resp) => {\r\n        console.log(resp);\r\n        if (resp.status === 201) {\r\n          alert(\"Ação adicionada ao sua carteira\");\r\n        }\r\n      })\r\n      .then(() => {\r\n        this.walletChangeCallback(\"item adicionado\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const spinner = (\r\n      <div className=\"d-flex justify-content-center\">\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n      </div>\r\n    );\r\n\r\n    const noDataContent = (\r\n      <Container>\r\n        <Row className=\"d-flex justify-content-center mt-2\">\r\n          <Card style={{ width: \"65%\" }} bg=\"dark\" text=\"light\">\r\n            <Card.Header>\r\n              <h3 className=\"d-flex justify-content-center\">\r\n                Ops, parece que não há itens nesta carteira, adicione seu\r\n                primeiro item abaixo!\r\n              </h3>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <MDBContainer>\r\n                <MDBRow className=\"d-flex justify-content-center\">\r\n                  <MDBCol md=\"6\">\r\n                    <form onSubmit={this.submitWalletItem}>\r\n                      <div className=\"grey-text\">\r\n                        <MDBInput\r\n                          label=\"Ativo Comprado\"\r\n                          icon=\"\"\r\n                          group\r\n                          style={{ fontSize: \"20px\" }}\r\n                          type=\"text\"\r\n                          onChange={(e) => {\r\n                            this.setState({\r\n                              stock: e.target.value.toUpperCase(),\r\n                            });\r\n                          }}\r\n                        />\r\n                        <div className=\"md-form\">\r\n                          <input\r\n                            type=\"date\"\r\n                            name=\"transaction-date\"\r\n                            className=\"form-control\"\r\n                            id=\"transaction-date\"\r\n                            onChange={(e) =>\r\n                              this.setState({ buy_date: e.target.value })\r\n                            }\r\n                            required\r\n                          />\r\n                        </div>\r\n                        <MDBInput\r\n                          label=\"Quantidade de Ações\"\r\n                          icon=\"\"\r\n                          style={{ fontSize: \"20px\" }}\r\n                          group\r\n                          type=\"text\"\r\n                          error=\"wrong\"\r\n                          success=\"right\"\r\n                          onChange={(e) => {\r\n                            this.setState({ stockAmount: e.target.value });\r\n                          }}\r\n                        />\r\n                        <MDBInput\r\n                          label=\"Capital Investido\"\r\n                          icon=\"\"\r\n                          style={{ fontSize: \"20px\" }}\r\n                          group\r\n                          type=\"text\"\r\n                          onChange={(e) => {\r\n                            this.setState({ investment: e.target.value });\r\n                          }}\r\n                        />\r\n\r\n                        <Form.Group controlId=\"formBasicCheckbox\">\r\n                          <Form.Control\r\n                            as=\"select\"\r\n                            custom\r\n                            defaultValue=\"\"\r\n                            onChange={(e) => {\r\n                              this.setState({ broker: e.target.value });\r\n                            }}\r\n                          >\r\n                            <option value=\"\" disabled>\r\n                              Corretora da Operação\r\n                            </option>\r\n                            <option value=\"Ágora - Bradesco\">Ágora</option>\r\n                            <option value=\"Banco do Brasil\">\r\n                              Banco do Brasil\r\n                            </option>\r\n                          </Form.Control>\r\n                        </Form.Group>\r\n                      </div>\r\n                      <div className=\"text-center\">\r\n                        <MDBBtn type=\"submit\">Enviar</MDBBtn>\r\n                      </div>\r\n                    </form>\r\n                  </MDBCol>\r\n                </MDBRow>\r\n              </MDBContainer>\r\n            </Card.Body>\r\n          </Card>\r\n        </Row>\r\n      </Container>\r\n    );\r\n\r\n    const variant = \"dark\";\r\n    const { Owner } = this.state;\r\n    const { noData } = this.state;\r\n    const { Loading } = this.state;\r\n    const notChosen = Owner === \"\";\r\n\r\n    return Owner === \"\" ? (\r\n      <>\r\n        <Container>\r\n          <Row className=\"d-flex justify-content-center mt-2\">\r\n            <Card\r\n              bg={variant.toLowerCase()}\r\n              text={variant.toLowerCase() === \"light\" ? \"dark\" : \"white\"}\r\n              style={{ width: \"65%\" }}\r\n              className=\"mb-2\"\r\n            >\r\n              <Card.Header>\r\n                <h3 className=\"d-flex justify-content-center\">\r\n                  Selecionar Carteira\r\n                </h3>\r\n              </Card.Header>\r\n              <Card.Body>\r\n                {/* <Card.Title>{variant} Card Title </Card.Title> */}\r\n                <Form>\r\n                  <Form.Group controlId=\"formOwnerSelect\">\r\n                    <Form.Label>Proprietário</Form.Label>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      custom\r\n                      onChange={this.handleOwnerChange}\r\n                      defaultValue=\"\"\r\n                    >\r\n                      <option value=\"\" disabled>\r\n                        Selecionar Carteira a ser mostrada\r\n                      </option>\r\n                      <option value=\"Ricardo\">Ricardo</option>\r\n                      <option value=\"Itala\">Itala</option>\r\n                      <option value=\"Thayssa\">Thayssa</option>\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                  {/* <Form.Group controlId=\"formSubmitBtn\">\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <MDBBtn type=\"submit\" color=\"elegant\">\r\n                        Ver Carteira\r\n                      </MDBBtn>\r\n                    </div>\r\n                  </Form.Group> */}\r\n                </Form>\r\n              </Card.Body>\r\n            </Card>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    ) : notChosen ? (\r\n      <div></div>\r\n    ) : Loading ? (\r\n      spinner\r\n    ) : noData ? (\r\n      noDataContent\r\n    ) : (\r\n      <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"data-table\">\r\n        <Container fluid className=\"p-4\">\r\n          <Row>\r\n            <Col sm={3}>\r\n              <Card className=\"mb-3\" bg=\"light\" text=\"dark\">\r\n                <Card.Body>\r\n                  <Nav variant=\"pills\" className=\"flex-column\">\r\n                    <Nav.Item>\r\n                      <Nav.Link\r\n                        style={{ color: \"black\", fontSize: \"16px\" }}\r\n                        eventKey=\"highlights\"\r\n                      >\r\n                        Destaques\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                      <Nav.Link\r\n                        style={{ color: \"black\", fontSize: \"16px\" }}\r\n                        eventKey=\"data-table\"\r\n                      >\r\n                        Itens da Carteira\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                      <Nav.Link\r\n                        style={{ color: \"black\", fontSize: \"16px\" }}\r\n                        eventKey=\"transactions\"\r\n                      >\r\n                        Transações\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                  </Nav>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col sm={9}>\r\n              <Card className=\"mb-3\" bg=\"light\" text=\"dark\">\r\n                <Tab.Content>\r\n                  <Tab.Pane eventKey=\"highlights\">\r\n                    <Row className=\"m-4\">\r\n                      <Col lg={4} xs={12}>\r\n                        <InfoCard\r\n                          title=\"Patrimônio\"\r\n                          description=\"Capital Investido: \"\r\n                          descriptionValue={this.state.TotalInvestment.toLocaleString(\r\n                            \"en-US\",\r\n                            {\r\n                              style: \"currency\",\r\n                              currency: \"BRL\",\r\n                            }\r\n                          )}\r\n                          value={this.state.TotalAmount.toLocaleString(\r\n                            \"en-US\",\r\n                            {\r\n                              style: \"currency\",\r\n                              currency: \"BRL\",\r\n                            }\r\n                          )}\r\n                          percentage={`${this.state.TotalChangePct} %`}\r\n                          percentageValue={this.state.TotalChangePct}\r\n                        />\r\n                      </Col>\r\n                      <Col lg={4} xs={12}>\r\n                        <InfoCard\r\n                          title=\"Maior Lucro\"\r\n                          description={this.state.MaxStockChange.stock.name.substr(\r\n                            0,\r\n                            18\r\n                          )}\r\n                          descriptionValue={`(${this.state.MaxStockChange.stock.symbol})`}\r\n                          value={(\r\n                            Math.round(\r\n                              100 *\r\n                                (this.state.MaxStockChange.money_amount -\r\n                                  this.state.MaxStockChange.investment),\r\n                              2\r\n                            ) / 100\r\n                          ).toLocaleString(\"en-US\", {\r\n                            style: \"currency\",\r\n                            currency: \"BRL\",\r\n                          })}\r\n                          percentage={`\r\n                  ${\r\n                    Math.round(\r\n                      10000 *\r\n                        ((this.state.MaxStockChange.money_amount -\r\n                          this.state.MaxStockChange.investment) /\r\n                          this.state.MaxStockChange.investment),\r\n                      2\r\n                    ) / 100\r\n                  } %`}\r\n                          percentageValue={\r\n                            Math.round(\r\n                              10000 *\r\n                                ((this.state.MaxStockChange.money_amount -\r\n                                  this.state.MaxStockChange.investment) /\r\n                                  this.state.MaxStockChange.investment),\r\n                              2\r\n                            ) / 100\r\n                          }\r\n                        />\r\n                      </Col>\r\n                      <Col lg={4} xs={12}>\r\n                        <InfoCard\r\n                          title=\"Maior Prejuízo\"\r\n                          description={this.state.MinStockChange.stock.name.substr(\r\n                            0,\r\n                            18\r\n                          )}\r\n                          descriptionValue={`(${this.state.MinStockChange.stock.symbol})`}\r\n                          value={(\r\n                            Math.round(\r\n                              100 *\r\n                                (this.state.MinStockChange.money_amount -\r\n                                  this.state.MinStockChange.investment),\r\n                              2\r\n                            ) / 100\r\n                          ).toLocaleString(\"en-US\", {\r\n                            style: \"currency\",\r\n                            currency: \"BRL\",\r\n                          })}\r\n                          percentage={`\r\n                  ${\r\n                    Math.round(\r\n                      10000 *\r\n                        ((this.state.MinStockChange.money_amount -\r\n                          this.state.MinStockChange.investment) /\r\n                          this.state.MinStockChange.investment),\r\n                      2\r\n                    ) / 100\r\n                  } %`}\r\n                          percentageValue={\r\n                            Math.round(\r\n                              10000 *\r\n                                ((this.state.MinStockChange.money_amount -\r\n                                  this.state.MinStockChange.investment) /\r\n                                  this.state.MinStockChange.investment),\r\n                              2\r\n                            ) / 100\r\n                          }\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col sm={12} lg={5}>\r\n                        <WalletAllocationChart\r\n                          owner={this.state.Owner}\r\n                          data={this.state.Wallet}\r\n                        />\r\n                      </Col>\r\n                      <Col sm={12} lg={7}>\r\n                        <WalletYield\r\n                          owner={this.state.Owner}\r\n                          data={this.state.Wallet}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                  </Tab.Pane>\r\n                  <Tab.Pane eventKey=\"data-table\">\r\n                    <Col lg={12} xs={12}>\r\n                      <WalletTable\r\n                        cb={this.walletChangeCallback}\r\n                        owner={this.state.Owner}\r\n                        data={this.state.Wallet}\r\n                      />\r\n                    </Col>\r\n                  </Tab.Pane>\r\n                  <Tab.Pane eventKey=\"transactions\">\r\n                    <Col lg={12} xs={12}>\r\n                      <TransactionsTable\r\n                        cb={this.walletChangeCallback}\r\n                        owner={this.state.Owner}\r\n                        data={this.state.Wallet}\r\n                      />\r\n                    </Col>\r\n                  </Tab.Pane>\r\n                </Tab.Content>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Tab.Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WalletComponent;\r\n","import React from \"react\";\r\nimport { Table, Row, Col, Card, Container, Spinner } from \"react-bootstrap\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport axios from \"axios\";\r\n\r\nclass StockDetailComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Indicators: undefined,\r\n      Dataset2: [],\r\n      Dataset: [],\r\n      Date: [],\r\n      Price: [],\r\n      Options: {},\r\n      Series: [],\r\n      Options2: {\r\n        labels: [\"Compra\", \"Neutro\", \"Venda\"],\r\n        chart: {\r\n          type: \"donut\",\r\n        },\r\n        animations: {\r\n          enabled: true,\r\n          easing: \"easeinout\",\r\n          speed: 800,\r\n          animateGradually: {\r\n            enabled: true,\r\n            delay: 150,\r\n          },\r\n          dynamicAnimation: {\r\n            enabled: true,\r\n            speed: 350,\r\n          },\r\n        },\r\n        title: {\r\n          text: \"Distribuição da carteira\",\r\n          align: \"center\",\r\n          style: {\r\n            fontFamily: \"Oswald\",\r\n            fontSize: \"22px\",\r\n          },\r\n        },\r\n        plotOptions: {\r\n          pie: {\r\n            donut: {\r\n              labels: {\r\n                show: true,\r\n                name: {\r\n                  show: true,\r\n                  fontFamily: \"Oswald\",\r\n                  fontSize: \"26px\",\r\n                },\r\n                value: {\r\n                  show: true,\r\n                  fontSize: \"26px\",\r\n                  fontFamily: \"Oswald\",\r\n                  formatter: function (val) {\r\n                    return `${val} indicadores`;\r\n                  },\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n        legend: {\r\n          show: true,\r\n          position: \"bottom\",\r\n        },\r\n        colors: [\r\n          \"#2E93fA\",\r\n          \"#66DA26\",\r\n          \"#546E7A\",\r\n          // \"#E91E63\",\r\n          // \"#FF9800\",\r\n          // \"#00B746\",\r\n          // \"#EF403C\",\r\n          // \"#3D3D3D\",\r\n        ],\r\n        dataLabels: {\r\n          enabled: true,\r\n          formatter: function (val) {\r\n            return Math.round(val * 100, 2) / 100 + \"%\";\r\n          },\r\n        },\r\n        responsive: [\r\n          {\r\n            breakpoint: 480,\r\n            options: {\r\n              chart: {\r\n                width: 200,\r\n              },\r\n              legend: {\r\n                position: \"bottom\",\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let dataset = [];\r\n    let series = [];\r\n    let dates = [];\r\n    let closePrices = [];\r\n    let name;\r\n    let indicators;\r\n    let buy = 0;\r\n    let sell = 0;\r\n    let neutral = 0;\r\n    axios\r\n      .get(`http://localhost:8000/api/stock/get/${this.props.match.params.id}`)\r\n      .then((resp) => resp.data)\r\n      .then((data) => {\r\n        name = data.name;\r\n        indicators = data.indicator;\r\n        indicators.momentum.forEach((item) => {\r\n          if (item.indicator !== \"Highs/Lows(14)\") {\r\n            if (item.signal === \"buy\") {\r\n              buy = buy + 1;\r\n            } else if (item.signal === \"sell\") {\r\n              sell = sell + 1;\r\n            } else {\r\n              neutral = neutral + 1;\r\n            }\r\n          }\r\n        });\r\n        if (indicators.ema_signal === \"buy\") {\r\n          buy = buy + 1;\r\n        } else if (indicators.ema_signal === \"sell\") {\r\n          sell = sell + 1;\r\n        } else {\r\n          neutral = neutral + 1;\r\n        }\r\n        console.log(data);\r\n        data.data.historical.forEach((item, index, array) => {\r\n          dates.push(item.date);\r\n          closePrices.push(item.close);\r\n          let change_percent = 0;\r\n          if (index !== array.length - 1) {\r\n            change_percent =\r\n              Math.round(\r\n                (((item.close - array[index + 1].close) * 100) /\r\n                  array[index + 1].close) *\r\n                  100,\r\n                2\r\n              ) / 100;\r\n          }\r\n          series.unshift({\r\n            x: item.date,\r\n            y: [item.open, item.high, item.low, item.close],\r\n          });\r\n          dataset.push({\r\n            date: item.date,\r\n            close: item.close,\r\n            change_percent: change_percent,\r\n          });\r\n        });\r\n        // setLoadingProgress(90);\r\n        // setLoading(false);\r\n      })\r\n      .then(() => {\r\n        this.setState({\r\n          Dataset2: [buy, neutral, sell],\r\n          Indicators: indicators,\r\n          Dataset: dataset,\r\n          Date: dates,\r\n          Price: closePrices,\r\n          Series: [{ data: series }],\r\n          Options: {\r\n            chart: {\r\n              type: \"candlestick\",\r\n              height: 550,\r\n            },\r\n            title: {\r\n              text: name,\r\n              align: \"left\",\r\n            },\r\n            xaxis: {\r\n              type: \"datetime\",\r\n            },\r\n            yaxis: {\r\n              tooltip: {\r\n                enabled: true,\r\n              },\r\n            },\r\n          },\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const content =\r\n      this.state.Indicators === undefined ? (\r\n        <div className=\"d-flex justiy-content-center\">\r\n          <Spinner></Spinner>\r\n        </div>\r\n      ) : (\r\n        <Card.Body>\r\n          <Row>\r\n            <Col>\r\n              <ReactApexChart\r\n                options={this.state.Options2}\r\n                series={this.state.Dataset2}\r\n                type=\"donut\"\r\n                height=\"500\"\r\n              />\r\n            </Col>\r\n            <Col>\r\n              <Table>\r\n                <thead>\r\n                  <tr>\r\n                    <th style={{ fontSize: \"18px\" }}>\r\n                      <strong>Limite</strong>\r\n                    </th>\r\n                    <th style={{ fontSize: \"18px\" }}>\r\n                      <strong>Valor</strong>\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.state.Indicators.resistances.map((value, index) => {\r\n                    return (\r\n                      <tr key={index}>\r\n                        <td>Resistencia {index + 1}</td>\r\n                        <td>R$ {value}</td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                  {this.state.Indicators.supports.map((value, index) => {\r\n                    return (\r\n                      <tr key={index}>\r\n                        <td>Suportes {index + 1}</td>\r\n                        <td>R$ {value}</td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </Table>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      );\r\n    return (\r\n      <Container fluid>\r\n        <Row className=\"mt-4\">\r\n          <Col xl={8} lg={9} sm={12} className=\"mb-4\">\r\n            <Row>\r\n              <Col sm={12}>\r\n                <Card bg=\"light\" id=\"chart\">\r\n                  <ReactApexChart\r\n                    options={this.state.Options}\r\n                    series={this.state.Series}\r\n                    type=\"candlestick\"\r\n                    height=\"500\"\r\n                  />\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col className=\"mt-4\" xs={12}>\r\n                <Card bg=\"light\">\r\n                  <Card.Header>Indicadores</Card.Header>\r\n                  {content}\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n          <Col xl={4} lg={3} sm={12}>\r\n            <Card bg=\"light\">\r\n              <Table>\r\n                <thead>\r\n                  <tr className=\"text-center\">\r\n                    <th style={{ width: \"20%\" }}>Ativo</th>\r\n                    <th style={{ width: \"20%\" }}>Preço</th>\r\n                    <th style={{ width: \"20%\" }}>Variação(%)</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.state.Dataset.map((item, index) => {\r\n                    let colorClass =\r\n                      item.change_percent > 0 ? \"success\" : \"danger\";\r\n                    return (\r\n                      <tr key={index} className=\"text-center\">\r\n                        <td>{item.date}</td>\r\n                        <td>R$ {item.close}</td>\r\n                        <td className={`text-${colorClass}`}>\r\n                          {item.change_percent}%\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </Table>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StockDetailComponent;\r\n","import React, { useState } from \"react\";\r\nimport { Col, Card, Container, Row, Form, Button } from \"react-bootstrap/\";\r\nimport axios from \"axios\";\r\nimport { MDBInput } from \"mdbreact\";\r\n\r\nconst AddStockComponent = () => {\r\n  const [symbol, setSymbol] = useState(\"\");\r\n  const [isETF, setETF] = useState(false);\r\n  const [isFund, setFund] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .post(\"http://localhost:8000/api/stock/\", {\r\n        symbol: symbol.toUpperCase(),\r\n        is_etf: isETF,\r\n        is_fund: isFund,\r\n      })\r\n      .then((resp) => {\r\n        console.log(resp);\r\n        resp.status === 201\r\n          ? alert(\r\n              `${resp.data.name}(${resp.data.symbol}) adicionado ao portfólio`\r\n            )\r\n          : alert(\"Ops, algum erro ocorreu\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    // console.log(symbol);\r\n    // console.log(isETF);\r\n    // console.log(isFund);\r\n  };\r\n\r\n  // cuida do textinput\r\n  const handleSymbolChange = (e) => {\r\n    setSymbol(e.target.value);\r\n    // console.log(symbol);\r\n  };\r\n\r\n  // cuida da checkbox ETF\r\n  const handleETFChange = (e) => {\r\n    // atualiza o stateHook para o contrário do seu valor anterior\r\n    setETF(!isETF);\r\n    // console.log(isETF);\r\n  };\r\n\r\n  // cuida da checkbox FUND\r\n  const handleFundChange = (e) => {\r\n    // atualiza o stateHook para o contrário do seu valor anterior\r\n    setFund(!isFund);\r\n    // console.log(isFund);\r\n  };\r\n\r\n  const variant = \"dark\";\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-center mt-3\">\r\n        <Card\r\n          bg={variant.toLowerCase()}\r\n          text={variant.toLowerCase() === \"light\" ? \"dark\" : \"white\"}\r\n          style={{ width: \"65%\" }}\r\n          className=\"mb-2\"\r\n        >\r\n          <Card.Header>\r\n            <h3 className=\"d-flex justify-content-center \">Adicionar Ação</h3>\r\n          </Card.Header>\r\n          <Card.Body>\r\n            {/* <Card.Title>{variant} Card Title </Card.Title> */}\r\n            <Form onSubmit={handleSubmit}>\r\n              <MDBInput\r\n                label=\"Insira a sigla da ação que deseja adicionar ao seu portfolio\"\r\n                icon=\"\"\r\n                group\r\n                style={{ fontSize: \"20px\", color: \"white\" }}\r\n                type=\"text\"\r\n                error=\"wrong\"\r\n                success=\"right\"\r\n                onChange={handleSymbolChange}\r\n              />\r\n              <Form.Group controlId=\"etfCheckBox\">\r\n                <Col className=\"\">\r\n                  <Form.Check\r\n                    checked={isETF}\r\n                    onChange={handleETFChange}\r\n                    type=\"checkbox\"\r\n                    className=\"\"\r\n                    label=\"ETF\"\r\n                  />\r\n                </Col>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"fundCheckBox\">\r\n                <Col>\r\n                  <Form.Check\r\n                    checked={isFund}\r\n                    onChange={handleFundChange}\r\n                    type=\"checkbox\"\r\n                    className=\"\"\r\n                    label=\"Fundo Imobiliário\"\r\n                  />\r\n                </Col>\r\n              </Form.Group>\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Adicionar\r\n              </Button>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AddStockComponent;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Col,\r\n  Row,\r\n  Card,\r\n  Table,\r\n  Form,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\nimport { MDBInput } from \"mdbreact\";\r\nimport axios from \"axios\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\n\r\nclass QueryComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      symbol: \"\",\r\n      Dataset: [],\r\n      Date: [],\r\n      Price: [],\r\n      Options: {},\r\n      Series: [],\r\n      loadedContent: false,\r\n      loadingContent: false,\r\n      Options2: {\r\n        labels: [\"Compra\", \"Neutro\", \"Venda\"],\r\n        chart: {\r\n          type: \"donut\",\r\n        },\r\n        animations: {\r\n          enabled: true,\r\n          easing: \"easeinout\",\r\n          speed: 800,\r\n          animateGradually: {\r\n            enabled: true,\r\n            delay: 150,\r\n          },\r\n          dynamicAnimation: {\r\n            enabled: true,\r\n            speed: 350,\r\n          },\r\n        },\r\n        title: {\r\n          text: \"Distribuição da carteira\",\r\n          align: \"center\",\r\n          style: {\r\n            fontFamily: \"Oswald\",\r\n            fontSize: \"22px\",\r\n          },\r\n        },\r\n        plotOptions: {\r\n          pie: {\r\n            donut: {\r\n              labels: {\r\n                show: true,\r\n                name: {\r\n                  show: true,\r\n                  fontFamily: \"Oswald\",\r\n                  fontSize: \"26px\",\r\n                },\r\n                value: {\r\n                  show: true,\r\n                  fontSize: \"26px\",\r\n                  fontFamily: \"Oswald\",\r\n                  formatter: function (val) {\r\n                    return `${val} indicadores`;\r\n                  },\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n        legend: {\r\n          show: true,\r\n          position: \"bottom\",\r\n        },\r\n        colors: [\r\n          \"#2E93fA\",\r\n          \"#66DA26\",\r\n          \"#546E7A\",\r\n          // \"#E91E63\",\r\n          // \"#FF9800\",\r\n          // \"#00B746\",\r\n          // \"#EF403C\",\r\n          // \"#3D3D3D\",\r\n        ],\r\n        dataLabels: {\r\n          enabled: true,\r\n          formatter: function (val) {\r\n            return Math.round(val * 100, 2) / 100 + \"%\";\r\n          },\r\n        },\r\n        responsive: [\r\n          {\r\n            breakpoint: 480,\r\n            options: {\r\n              chart: {\r\n                width: 200,\r\n              },\r\n              legend: {\r\n                position: \"bottom\",\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleSymbolChange = this.handleSymbolChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  handleSymbolChange(e) {\r\n    // console.log(e.target.value);\r\n    this.setState({\r\n      symbol: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    this.setState({ loadingContent: true });\r\n    e.preventDefault();\r\n    let dataset = [];\r\n    let series = [];\r\n    let dates = [];\r\n    let closePrices = [];\r\n    let name;\r\n    let indicators;\r\n    let buy = 0;\r\n    let sell = 0;\r\n    let neutral = 0;\r\n    axios\r\n      .get(`http://localhost:8000/api/query/`, {\r\n        params: {\r\n          symbol: this.state.symbol,\r\n        },\r\n      })\r\n      .then((resp) => resp.data)\r\n      .then((data) => {\r\n        name = this.state.symbol.toLocaleUpperCase();\r\n        indicators = data.indicator;\r\n        indicators.momentum.forEach((item) => {\r\n          if (item.indicator !== \"Highs/Lows(14)\") {\r\n            if (item.signal === \"buy\") {\r\n              buy = buy + 1;\r\n            } else if (item.signal === \"sell\") {\r\n              sell = sell + 1;\r\n            } else {\r\n              neutral = neutral + 1;\r\n            }\r\n          }\r\n        });\r\n        if (indicators.ema_signal === \"buy\") {\r\n          buy = buy + 1;\r\n        } else if (indicators.ema_signal === \"sell\") {\r\n          sell = sell + 1;\r\n        } else {\r\n          neutral = neutral + 1;\r\n        }\r\n        console.log(data);\r\n        data.data.historical.forEach((item, index, array) => {\r\n          dates.push(item.date);\r\n          closePrices.push(item.close);\r\n          let change_percent = 0;\r\n          if (index !== array.length - 1) {\r\n            change_percent =\r\n              Math.round(\r\n                (((item.close - array[index + 1].close) * 100) /\r\n                  array[index + 1].close) *\r\n                  100,\r\n                2\r\n              ) / 100;\r\n          }\r\n          series.unshift({\r\n            x: item.date,\r\n            y: [item.open, item.high, item.low, item.close],\r\n          });\r\n          dataset.push({\r\n            date: item.date,\r\n            close: item.close,\r\n            change_percent: change_percent,\r\n          });\r\n        });\r\n        // setLoadingProgress(90);\r\n        // setLoading(false);\r\n      })\r\n      .then(() => {\r\n        console.log(series);\r\n        this.setState({\r\n          Dataset2: [buy, neutral, sell],\r\n          Indicators: indicators,\r\n          Dataset: dataset,\r\n          Date: dates,\r\n          Price: closePrices,\r\n          Series: [{ data: series }],\r\n          Options: {\r\n            chart: {\r\n              type: \"candlestick\",\r\n              height: 550,\r\n            },\r\n            title: {\r\n              text: name,\r\n              align: \"left\",\r\n            },\r\n            yaxis: {\r\n              tooltip: {\r\n                enabled: true,\r\n              },\r\n            },\r\n          },\r\n        });\r\n      })\r\n      .then(() => {\r\n        this.setState({\r\n          loadedContent: true,\r\n          loadingContent: false,\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const content2 =\r\n      this.state.Indicators === undefined ? (\r\n        <div className=\"d-flex justiy-content-center\">\r\n          <Spinner></Spinner>\r\n        </div>\r\n      ) : (\r\n        <Card.Body>\r\n          <Row>\r\n            <Col>\r\n              <ReactApexChart\r\n                options={this.state.Options2}\r\n                series={this.state.Dataset2}\r\n                type=\"donut\"\r\n                height=\"500\"\r\n              />\r\n            </Col>\r\n            <Col>\r\n              <Table>\r\n                <thead>\r\n                  <tr>\r\n                    <th style={{ fontSize: \"18px\" }}>\r\n                      <strong>Limite</strong>\r\n                    </th>\r\n                    <th style={{ fontSize: \"18px\" }}>\r\n                      <strong>Valor</strong>\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.state.Indicators.resistances.map((value, index) => {\r\n                    return (\r\n                      <tr key={index}>\r\n                        <td>Resistencia {index + 1}</td>\r\n                        <td>R$ {value}</td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                  {this.state.Indicators.supports.map((value, index) => {\r\n                    return (\r\n                      <tr key={index}>\r\n                        <td>Suportes {index + 1}</td>\r\n                        <td>R$ {value}</td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </Table>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      );\r\n    const spinner = (\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </Spinner>\r\n    );\r\n    const content = (\r\n      <Container fluid>\r\n        <Row>\r\n          <Col xl={8} lg={9} sm={12}>\r\n            <Row>\r\n              <Col sm={12}>\r\n                <Card id=\"chart\" bg=\"light\" className=\"mb-4\">\r\n                  <ReactApexChart\r\n                    options={this.state.Options}\r\n                    series={this.state.Series}\r\n                    type=\"candlestick\"\r\n                    height=\"500\"\r\n                    className=\"\"\r\n                  />\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col className=\"mt-4\" xs={12}>\r\n                <Card bg=\"light\">\r\n                  <Card.Header>Indicadores</Card.Header>\r\n                  {content2}\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n          <Col xl={4} lg={3} sm={12}>\r\n            <Card bg=\"light\">\r\n              <Table striped>\r\n                <thead>\r\n                  <tr className=\"text-center\">\r\n                    <th style={{ width: \"20%\" }}>Ativo</th>\r\n                    <th style={{ width: \"20%\" }}>Preço</th>\r\n                    <th style={{ width: \"20%\" }}>Variação(%)</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.state.Dataset.map((item, index) => {\r\n                    let colorClass =\r\n                      item.change_percent > 0 ? \"success\" : \"danger\";\r\n                    return (\r\n                      <tr key={index} className=\"text-center\">\r\n                        <td>{item.date}</td>\r\n                        <td>R$ {item.close}</td>\r\n                        <td className={`text-${colorClass}`}>\r\n                          {item.change_percent}%\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </Table>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n    const variant = \"dark\";\r\n    return (\r\n      <>\r\n        <Container>\r\n          <Row className=\"justify-content-center mt-3\">\r\n            <Card\r\n              bg={variant.toLowerCase()}\r\n              text={variant.toLowerCase() === \"light\" ? \"dark\" : \"white\"}\r\n              style={{ width: \"65%\" }}\r\n              className=\"mb-2\"\r\n            >\r\n              <Card.Header>\r\n                <h3 className=\"d-flex justify-content-center\">Procurar</h3>\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <Form onSubmit={this.handleSubmit}>\r\n                  <Form.Group controlId=\"symbol\">\r\n                    <MDBInput\r\n                      label=\"Insira a sigla da ação a ser visualizada aqui\"\r\n                      icon=\"\"\r\n                      style={{ fontSize: \"20px\", color: \"white\" }}\r\n                      group\r\n                      type=\"text\"\r\n                      error=\"wrong\"\r\n                      success=\"right\"\r\n                      onChange={this.handleSymbolChange}\r\n                    />\r\n                  </Form.Group>\r\n                  <div className=\"d-flex justify-content-center\">\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                      Adicionar\r\n                    </Button>\r\n                  </div>\r\n                </Form>\r\n              </Card.Body>\r\n            </Card>\r\n          </Row>\r\n        </Container>\r\n        {this.state.loadedContent ? (\r\n          content\r\n        ) : this.state.loadingContent ? (\r\n          <div className=\"d-flex justify-content-center\">{spinner}</div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QueryComponent;\r\n","import React from \"react\";\r\nimport { Row, Col, Table, Card, Container } from \"react-bootstrap\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport axios from \"axios\";\r\n\r\nclass IbovespaComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Dataset: [],\r\n      Date: [],\r\n      Price: [],\r\n      Options: {},\r\n      Series: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let dataset = [];\r\n    let series = [];\r\n    let dates = [];\r\n    let closePrices = [];\r\n    let name;\r\n    axios\r\n      .get(`http://localhost:8000/api/index/historical/`, {\r\n        params: {\r\n          name: \"Bovespa\",\r\n        },\r\n      })\r\n      .then((resp) => resp.data)\r\n      .then((data) => {\r\n        name = data.name;\r\n        console.log(data);\r\n        data.data.historical.forEach((item, index, array) => {\r\n          dates.push(item.date);\r\n          closePrices.push(item.close);\r\n          let change_percent = 0;\r\n          if (index !== array.length - 1) {\r\n            change_percent =\r\n              Math.round(\r\n                (((item.close - array[index + 1].close) * 100) /\r\n                  array[index + 1].close) *\r\n                  100,\r\n                2\r\n              ) / 100;\r\n          }\r\n          series.unshift({\r\n            x: item.date,\r\n            y: [item.open, item.high, item.low, item.close],\r\n          });\r\n          dataset.push({\r\n            date: item.date,\r\n            close: item.close,\r\n            change_percent: change_percent,\r\n          });\r\n        });\r\n        // setLoadingProgress(90);\r\n        // setLoading(false);\r\n      })\r\n      .then(() => {\r\n        this.setState({\r\n          Dataset: dataset,\r\n          Date: dates,\r\n          Price: closePrices,\r\n          Series: [{ data: series }],\r\n          Options: {\r\n            chart: {\r\n              type: \"candlestick\",\r\n              height: 550,\r\n            },\r\n            // title: {\r\n            //   text: \"Ibovespa\",\r\n            //   align: \"center\",\r\n            // },\r\n            xaxis: {\r\n              type: \"datetime\",\r\n            },\r\n            yaxis: {\r\n              tooltip: {\r\n                enabled: true,\r\n              },\r\n            },\r\n          },\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Row className=\"mt-4\">\r\n          <Col xl={8} lg={9} sm={12}>\r\n            <Card bg=\"light\" id=\"chart\" className=\"mb-4\">\r\n              <Card.Header style={{ fontSize: \"20px\" }}>\r\n                Gráfico histórico do índice Ibovespa\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <ReactApexChart\r\n                  options={this.state.Options}\r\n                  series={this.state.Series}\r\n                  type=\"candlestick\"\r\n                  height=\"500\"\r\n                />\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col xl={4} lg={3} sm={12}>\r\n            <Card bg=\"light\">\r\n              <Card.Header style={{ fontSize: \"20px\" }}>\r\n                Tabela com os valores do gráfico\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <Table>\r\n                  <thead>\r\n                    <tr className=\"text-center\">\r\n                      <th style={{ width: \"20%\" }}>Ibovespa</th>\r\n                      <th style={{ width: \"20%\" }}>Índice</th>\r\n                      <th style={{ width: \"20%\" }}>Variação(%)</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {this.state.Dataset.map((item, index) => {\r\n                      let colorClass =\r\n                        item.change_percent > 0 ? \"success\" : \"danger\";\r\n                      return (\r\n                        <tr key={index} className=\"text-center\">\r\n                          <td>{item.date}</td>\r\n                          <td>{item.close} Pts</td>\r\n                          <td className={`text-${colorClass}`}>\r\n                            {item.change_percent}%\r\n                          </td>\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                  </tbody>\r\n                </Table>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IbovespaComponent;\r\n","import React from \"react\";\r\n// import ReactDOM from \"react-dom\";\r\nimport TopBar from \"./global/Navbar\";\r\nimport DashboardComponent from \"./dashboard/Dashboard\";\r\nimport WalletComponent from \"./wallet/Wallet\";\r\n// import ForexComponent from \"./forex/ForexComponent\";\r\nimport StockDetailComponent from \"./stockdetail/StockDetailComponent\";\r\nimport AddStockComponent from \"./addstock/AddStockComponent\";\r\nimport QueryComponent from \"./query/QueryComponent\";\r\nimport IbovespaComponent from \"./bvsp/IbovespaComponent\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\n// import ReactDOM from \"react-dom\";\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"App\">\r\n        <TopBar />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={DashboardComponent} />\r\n          <Route exact path=\"/wallet\" component={WalletComponent} />\r\n\r\n          {/* <Route exact path=\"/forex\" component={ForexComponent} /> */}\r\n          <Route exact path=\"/stock/:id\" component={StockDetailComponent} />\r\n          <Route exact path=\"/addStock\" component={AddStockComponent} />\r\n          <Route exact path=\"/query\" component={QueryComponent} />\r\n          <Route exact path=\"/bvsp\" component={IbovespaComponent} />\r\n        </Switch>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport App from \"./App.js\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\n\r\nReactDOM.render(<App />, rootElement);\r\n"],"sourceRoot":""}