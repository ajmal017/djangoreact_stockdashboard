{"version":3,"sources":["global/Navbar.js","dashboard/ProgressBarComponent.js","dashboard/StockTable.js","dashboard/FavoriteCard.js","dashboard/SubNavbar.js","dashboard/DashboardChart.js","dashboard/Dashboard.js","wallet/InfoCard.js","wallet/WalletTable.js","wallet/TransactionsTable.js","wallet/WalletAllocationChart.js","wallet/WalletYield.js","wallet/Wallet.js","stockdetail/StockDetailComponent.js","addstock/AddStockComponent.js","query/QueryComponent.js","bvsp/IbovespaComponent.js","App.js","index.js"],"names":["withRouter","pathname","location","Navbar","bg","expand","variant","Brand","className","href","Toggle","aria-controls","Collapse","id","Nav","Link","active","includes","ProgressBarComponent","props","Row","ProgressBar","animated","now","loadingProgress","style","width","label","Math","round","StockTable","state","isLoading","stocks","stocksId","favoriteHandler","bind","e","persist","target","classList","contains","replace","firstChild","data","axios","put","pk","parseInt","getAttribute","then","resp","console","log","this","setState","get","itemsProcessed","favorite","forEach","stock","push","index","array","updated_stock","length","content","Table","size","striped","responsive","map","colorClass","price","toLocaleString","currency","change","change_percent","key","fontSize","symbol","to","Button","onClick","stockid","toString","Component","FavoriteCard","deleteHandler","delete","hello","asdhasi","status","alert","Container","Col","sm","Card","Body","padding","name","substr","SubNavbar","indexes","country","data2","forexes","itemsProcessed2","item","params","object","settings","dots","infinite","speed","slidesToShow","slidesToScroll","autoplaySpeed","breakpoint","text","Badge","pill","DashboardChart","series","options","chart","type","height","plotOptions","bar","colors","ranges","from","color","columnWidth","dataLabels","enabled","yaxis","title","labels","formatter","y","toFixed","show","xaxis","ser","lab","React","DashboardComponent","fluid","Header","InfoCard","percentageValue","toUpperCase","description","descriptionValue","value","percentage","WalletTable","useState","ModalEdit","setModalEdit","ModalAdd","setModalAdd","Stock","setStock","Amount","setAmount","Investment","setInvestment","Broker","setBroker","EditId","setEditId","BuyDate","setBuyDate","useEffect","handleStockAmountChange","handleInvestmentChange","parseFloat","toggleModalAdd","toggleModalEdit","deleteWalletItem","find","o","window","confirm","cb","money_amount","investment","cursor","broker","owner","buy_price","stock_amount","isOpen","toggle","md","onSubmit","preventDefault","post","buy_date","catch","err","icon","group","onChange","required","error","success","Form","Group","controlId","Control","as","custom","defaultValue","disabled","TransactionsTable","deleteTransactionItem","submitTransactionItem","uploadData","FormData","append","Operation","Date","Document","Data","operation","date","fontWeight","document","download","encType","File","files","WalletAllocationChart","animations","easing","animateGradually","delay","dynamicAnimation","align","fontFamily","pie","donut","val","amount","legend","position","WalletYield","horizontal","offsetX","stroke","ser1","ser2","ibovespa_change","WalletComponent","handleOwnerChange","Owner","Loading","higher","max","apply","obj","min","object2","reduce","sum","currentValue","Wallet","TotalAmount","TotalInvestment","TotalChangePct","MaxStockChange","MinStockChange","noData","walletChangeCallback","msg","submitWalletItem","stockAmount","stockAmout","updateRun","stockData","spinner","Spinner","animation","role","noDataContent","notChosen","toLowerCase","Label","Tab","defaultActiveKey","Item","eventKey","Content","Pane","lg","xs","StockDetailComponent","Indicators","undefined","Dataset2","Dataset","Price","Options","Series","Options2","indicators","dataset","dates","closePrices","buy","sell","neutral","match","indicator","momentum","signal","ema_signal","historical","close","unshift","x","open","high","low","tooltip","resistances","supports","xl","AddStockComponent","setSymbol","isETF","setETF","isFund","setFund","is_etf","is_fund","Check","checked","QueryComponent","loadedContent","loadingContent","handleSubmit","handleSymbolChange","toLocaleUpperCase","content2","IbovespaComponent","App","exact","path","component","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.ac27c0e8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\n\r\nimport \"./Navbar.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nfunction TopBar({ location }) {\r\n  const { pathname } = location;\r\n\r\n  return (\r\n    <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\">\r\n      <Navbar.Brand className=\"\" href=\"/\">\r\n        <span>RM</span> INVESTIMENTOS\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link\r\n            className=\"navbar-link-item\"\r\n            href=\"/\"\r\n            active={pathname === \"/\"}\r\n          >\r\n            DASHBOARD\r\n          </Nav.Link>\r\n          <Nav.Link\r\n            className=\"navbar-link-item\"\r\n            href=\"/wallet\"\r\n            active={pathname.includes(\"/wallet\")}\r\n          >\r\n            CARTEIRA\r\n          </Nav.Link>\r\n          <Nav.Link\r\n            className=\"navbar-link-item\"\r\n            href=\"/addStock\"\r\n            active={pathname.includes(\"/addStock\")}\r\n          >\r\n            ADICIONAR AÇÃO\r\n          </Nav.Link>\r\n          <Nav.Link\r\n            className=\"navbar-link-item\"\r\n            href=\"/query\"\r\n            active={pathname.includes(\"/query\")}\r\n          >\r\n            CONSULTA\r\n          </Nav.Link>\r\n          {/* <Nav.Link\r\n            className=\"navbar-link-item\"\r\n            href=\"/forex\"\r\n            active={pathname.includes(\"/forex\")}\r\n          >\r\n            CÂMBIO\r\n          </Nav.Link> */}\r\n          <Nav.Link\r\n            className=\"navbar-link-item\"\r\n            href=\"/bvsp\"\r\n            active={pathname.includes(\"/bvsp\")}\r\n          >\r\n            IBOVESPA\r\n          </Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\nexport default withRouter(TopBar);\r\n","import React from \"react\";\r\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\nconst ProgressBarComponent = (props) => {\r\n  return (\r\n    <>\r\n      <Row>\r\n        <ProgressBar\r\n          animated\r\n          variant=\"dark\"\r\n          now={props.loadingProgress}\r\n          style={{ width: \"100%\" }}\r\n          label={`${Math.round(props.loadingProgress)}%`}\r\n        />\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProgressBarComponent;\r\n","import React, { Component } from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./StockTable.css\";\r\nimport axios from \"axios\";\r\nimport ProgressBarComponent from \"./ProgressBarComponent\";\r\n\r\n// Função que atualiza as informações do ativo dado um ID\r\n\r\nclass StockTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // creating States\r\n    this.state = {\r\n      isLoading: true,\r\n      stocks: [],\r\n      loadingProgress: 0,\r\n      stocksId: [],\r\n    };\r\n    this.favoriteHandler = this.favoriteHandler.bind(this);\r\n  }\r\n\r\n  favoriteHandler(e) {\r\n    e.persist();\r\n\r\n    if (e.target.classList.contains(\"btn-outline-info\")) {\r\n      e.target.classList.replace(\"btn-outline-info\", \"btn-info\");\r\n      e.target.firstChild.data = \"Favoritar\";\r\n    } else {\r\n      e.target.classList.replace(\"btn-info\", \"btn-outline-info\");\r\n      e.target.firstChild.data = \"Desfavoritar\";\r\n    }\r\n    axios\r\n      .put(\"http://localhost:8000/api/stock/\", {\r\n        pk: parseInt(e.target.getAttribute(\"stockid\")),\r\n      })\r\n      .then((resp) => {\r\n        console.log(resp);\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    axios\r\n      .get(\"http://localhost:8000/api/stock\")\r\n      .then((resp) => resp.data)\r\n      .then((data) => {\r\n        var itemsProcessed = 0;\r\n        var stocksId = [];\r\n        var stocks = [];\r\n\r\n        if (this.props.favorite) {\r\n          // CASO EM QUE QUEREMOS A TABELA DOS FAVORITOS\r\n          data.forEach((stock) => {\r\n            if (stock.favorite) {\r\n              stocksId.push(stock.pk);\r\n            }\r\n          });\r\n        } else {\r\n          data.forEach((stock) => {\r\n            if (!stock.favorite) {\r\n              stocksId.push(stock.pk);\r\n              // console.log(stock);\r\n            }\r\n          });\r\n        }\r\n        stocksId.forEach((id, index, array) => {\r\n          // console.log(id);\r\n          axios\r\n            .get(`http://localhost:8000/api/stock/update/${id}`)\r\n            .then((resp) => resp.data.updated_stock)\r\n            .then((stock) => {\r\n              // console.log(stock);\r\n              itemsProcessed++;\r\n              stocks.push(stock);\r\n              this.setState({\r\n                loadingProgress: (100 * itemsProcessed) / array.length,\r\n              });\r\n            })\r\n            .then(() => {\r\n              if (itemsProcessed === array.length) {\r\n                this.setState({\r\n                  isLoading: false,\r\n                  stocks: stocks,\r\n                });\r\n              }\r\n            });\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const content = this.state.isLoading ? (\r\n      <ProgressBarComponent loadingProgress={this.state.loadingProgress} />\r\n    ) : (\r\n      <Table className=\"text-dark\" size=\"sm\" striped responsive>\r\n        <thead>\r\n          <tr className=\"text-center\">\r\n            <th style={{ width: \"20%\" }}>Ativo</th>\r\n            <th style={{ width: \"20%\" }}>Preço</th>\r\n            <th style={{ width: \"20%\" }}>Variação(%)</th>\r\n            <th style={{ width: \"20%\" }}>Variação(R$)</th>\r\n            <th style={{ width: \"15%\" }}></th>\r\n            <th style={{ width: \"5%\" }}></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {this.state.stocks.map((stock) => {\r\n            let price = stock.price.toLocaleString(\"pt-BR\", {\r\n              style: \"currency\",\r\n              currency: \"BRL\",\r\n            });\r\n            let change = (\r\n              stock.price *\r\n              (stock.change_percent / 100)\r\n            ).toLocaleString(\"pt-BR\", {\r\n              style: \"currency\",\r\n              currency: \"BRL\",\r\n            });\r\n\r\n            let colorClass;\r\n            stock.change_percent > 0\r\n              ? (colorClass = \"success\")\r\n              : (colorClass = \"danger\");\r\n\r\n            return (\r\n              <tr className=\"text-center\" key={stock.pk}>\r\n                <td style={{ fontSize: \"18px\" }} className=\"align-middle\">\r\n                  {stock.symbol}\r\n                </td>\r\n                <td style={{ fontSize: \"18px\" }} className=\"align-middle\">\r\n                  {price}\r\n                </td>\r\n                <td className=\"align-middle\">\r\n                  <span\r\n                    style={{ fontSize: \"15px\" }}\r\n                    className={`badge-${colorClass} badge-pill align-middle`}\r\n                  >\r\n                    {stock.change_percent}%\r\n                  </span>\r\n                </td>\r\n                <td style={{ fontSize: \"15px\" }} className={`align-middle`}>\r\n                  {change}\r\n                </td>\r\n                <td style={{ fontSize: \"15px\" }} className=\"align-middle\">\r\n                  <Link to={`/stock/${stock.pk}`}>\r\n                    <Button size=\"sm\" variant=\"outline-info\">\r\n                      Gráfico\r\n                    </Button>\r\n                  </Link>\r\n                </td>\r\n                <td style={{ fontSize: \"18px\" }}>\r\n                  <Button\r\n                    className=\"float-left\"\r\n                    onClick={this.favoriteHandler}\r\n                    size=\"sm\"\r\n                    stockid={stock.pk.toString()}\r\n                    variant={stock.favorite ? \"outline-info\" : \"info\"}\r\n                  >\r\n                    {stock.favorite ? \"Desfavoritar\" : \"Favoritar\"}\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n    );\r\n    return <>{content}</>;\r\n  }\r\n}\r\n\r\nexport default StockTable;\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Button, Card } from \"react-bootstrap\";\r\nimport ProgressBarComponent from \"./ProgressBarComponent\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./StockTable.css\";\r\nimport axios from \"axios\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\n// Função que atualiza as informações do ativo dado um ID\r\n\r\nclass FavoriteCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // creating States\r\n    this.state = {\r\n      isLoading: true,\r\n      stocks: [],\r\n      loadingProgress: 0,\r\n      stocksId: [],\r\n    };\r\n    this.deleteHandler = this.deleteHandler.bind(this);\r\n    this.favoriteHandler = this.favoriteHandler.bind(this);\r\n  }\r\n\r\n  favoriteHandler(e) {\r\n    e.persist();\r\n\r\n    if (e.target.classList.contains(\"btn-outline-info\")) {\r\n      e.target.classList.replace(\"btn-outline-info\", \"btn-info\");\r\n      e.target.firstChild.data = \"Favoritar\";\r\n    } else {\r\n      e.target.classList.replace(\"btn-info\", \"btn-outline-info\");\r\n      e.target.firstChild.data = \"Desfavoritar\";\r\n    }\r\n    axios\r\n      .put(\"http://localhost:8000/api/stock/\", {\r\n        pk: parseInt(e.target.getAttribute(\"stockid\")),\r\n      })\r\n      .then((resp) => {\r\n        console.log(resp);\r\n      });\r\n  }\r\n\r\n  deleteHandler(e) {\r\n    axios\r\n      .delete(\"http://localhost:8000/api/stock/\", {\r\n        pk: e.target.getAttribute(\"id\"),\r\n        hello: \"hahah\",\r\n        asdhasi: \"asoidhasu\",\r\n      })\r\n      .then((resp) => {\r\n        resp.status === 201\r\n          ? alert(\"Ativo deletado com sucesso\")\r\n          : alert(\"Ops, houve algum erro\");\r\n      });\r\n  }\r\n  componentDidMount() {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    axios\r\n      .get(\"http://localhost:8000/api/stock/\")\r\n      .then((resp) => resp.data)\r\n      .then((data) => {\r\n        var itemsProcessed = 0;\r\n        var stocksId = [];\r\n        var stocks = [];\r\n\r\n        if (this.props.favorite) {\r\n          // CASO EM QUE QUEREMOS A TABELA DOS FAVORITOS\r\n          data.forEach((stock) => {\r\n            if (stock.favorite) {\r\n              stocksId.push(stock.pk);\r\n            }\r\n          });\r\n        }\r\n        stocksId.forEach((id, index, array) => {\r\n          axios\r\n            .get(`http://localhost:8000/api/stock/update/${id}`)\r\n            .then((resp) => resp.data.updated_stock)\r\n            .then((stock) => {\r\n              itemsProcessed++;\r\n              stocks.push(stock);\r\n              this.setState({\r\n                loadingProgress: (100 * itemsProcessed) / array.length,\r\n              });\r\n            })\r\n            .then(() => {\r\n              if (itemsProcessed === array.length) {\r\n                this.setState({\r\n                  isLoading: false,\r\n                  stocks: stocks,\r\n                });\r\n              }\r\n            });\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    // const size = this.props.favorite ? \"xl\" : \"sm\";\r\n    const content = this.state.isLoading ? (\r\n      // <Row className=\"mt-2\">\r\n      <Container>\r\n        <Col style={{ width: \"100%\" }} sm={12}>\r\n          <ProgressBarComponent loadingProgress={this.state.loadingProgress} />\r\n        </Col>\r\n      </Container>\r\n    ) : // </Row>\r\n    this.state.stocks.length > 0 ? (\r\n      this.state.stocks.map((stock) => {\r\n        let price = stock.price.toLocaleString(\"pt-BR\", {\r\n          style: \"currency\",\r\n          currency: \"BRL\",\r\n        });\r\n        // let change = (\r\n        //   stock.price *\r\n        //   (stock.change_percent / 100)\r\n        // ).toLocaleString(\"pt-BR\", {\r\n        //   style: \"currency\",\r\n        //   currency: \"BRL\",\r\n        // });\r\n\r\n        let colorClass;\r\n        stock.change_percent > 0\r\n          ? (colorClass = \"success\")\r\n          : (colorClass = \"danger\");\r\n\r\n        return (\r\n          <div\r\n            className=\"col-xl-3 col-lg-4 col-md-6 col-sm-12 p-3\"\r\n            key={stock.pk}\r\n          >\r\n            <Card className=\"\">\r\n              <Card.Body style={{ padding: \"5px\" }}>\r\n                <Row>\r\n                  <Col>\r\n                    <Row>\r\n                      <Col sm={12}>\r\n                        <div\r\n                          className={`badge bg-info z-depth-4 py-1 px-4 ml-4 mt-n2 rounded`}\r\n                        >\r\n                          <h4 className=\"text-white\">{stock.symbol}</h4>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col sm={12} className=\"d-flex justify-content-start\">\r\n                        <Button\r\n                          size=\"sm\"\r\n                          variant=\"outline-info\"\r\n                          id={stock.pk}\r\n                          onClick={this.deleteHandler}\r\n                        >\r\n                          <i className=\"fas fa-times fa-lg\"></i>\r\n                        </Button>\r\n                        <Link className=\"\" to={`/stock/${stock.pk}`}>\r\n                          <Button size=\"sm\" variant=\"outline-info\">\r\n                            <i className=\"fas fa-chart-line fa-lg\"></i>\r\n                          </Button>\r\n                        </Link>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col sm={12}>\r\n                        <Button\r\n                          className=\"ml-4\"\r\n                          size=\"sm\"\r\n                          onClick={this.favoriteHandler}\r\n                          stockid={stock.pk}\r\n                          variant={stock.favorite ? \"outline-info\" : \"info\"}\r\n                        >\r\n                          {stock.favorite ? \"Desfavoritar\" : \"Favoritar\"}\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col>\r\n                    <Row>\r\n                      <Col sm={12}>\r\n                        <p className=\"float-right text-uppercase text-white\">\r\n                          <small>{stock.name.substr(0, 32)}</small>\r\n                        </p>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col sm={12}>\r\n                        <p className=\"float-right text-uppercase text-muted\">\r\n                          <small>Cotação</small>\r\n                        </p>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col sm={12}>\r\n                        <h4 className=\"d-flex font-weight-bold float-right text-uppercase text-white\">\r\n                          {price}\r\n                          <span\r\n                            className={`badge badge-pill ml-1 badge-${colorClass}`}\r\n                          >\r\n                            {stock.change_percent}%\r\n                          </span>\r\n                        </h4>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                </Row>\r\n              </Card.Body>\r\n            </Card>\r\n          </div>\r\n        );\r\n      })\r\n    ) : (\r\n      <div> Você não possui ações favoritas</div>\r\n    );\r\n    return <>{content}</>;\r\n  }\r\n}\r\n\r\nexport default FavoriteCard;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Col, Badge } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Slider from \"react-slick\";\r\n\r\nclass SubNavbar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      indexes: [\r\n        {\r\n          name: \"Bovespa\",\r\n          country: \"brazil\",\r\n        },\r\n        {\r\n          name: \"S&P 500\",\r\n          country: \"united states\",\r\n        },\r\n        {\r\n          name: \"Nasdaq\",\r\n          country: \"united states\",\r\n        },\r\n        {\r\n          name: \"Dow 30\",\r\n          country: \"united states\",\r\n        },\r\n      ],\r\n      data2: [],\r\n      forexes: [\r\n        {\r\n          name: \"USD\",\r\n        },\r\n        {\r\n          name: \"EUR\",\r\n        },\r\n        {\r\n          name: \"GBP\",\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    var itemsProcessed = 0;\r\n    var itemsProcessed2 = 0;\r\n    var data = [];\r\n    this.state.indexes.forEach((item, index, array) => {\r\n      axios\r\n        .get(\"http://localhost:8000/api/index/get/\", {\r\n          params: { name: item.name, country: item.country },\r\n        })\r\n        .then((resp) => {\r\n          itemsProcessed = itemsProcessed + 1;\r\n          // console.log(resp.data.object);\r\n          data.push(resp.data.object);\r\n        })\r\n        .then(() => {\r\n          if (itemsProcessed === array.length) {\r\n            this.setState({ data: data });\r\n          }\r\n        });\r\n    });\r\n    this.state.forexes.forEach((item, index, array) => {\r\n      axios\r\n        .get(\"http://localhost:8000/api/forex/get/\", {\r\n          params: { name: item.name },\r\n        })\r\n        .then((resp) => {\r\n          itemsProcessed2 = itemsProcessed2 + 1;\r\n          // console.log(resp.data.object);\r\n          data.push(resp.data.object);\r\n        })\r\n        .then(() => {\r\n          if (itemsProcessed2 === array.length) {\r\n            this.setState({ data2: data });\r\n          }\r\n        });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const settings = {\r\n      className: \"mt-2\",\r\n      dots: true,\r\n      infinite: true,\r\n      speed: 1500,\r\n      slidesToShow: 4,\r\n      slidesToScroll: 3,\r\n      // autoplay: false,\r\n      autoplaySpeed: 3200,\r\n      responsive: [\r\n        {\r\n          breakpoint: 1600,\r\n          settings: {\r\n            slidesToShow: 3,\r\n          },\r\n        },\r\n        {\r\n          breakpoint: 1000,\r\n          settings: {\r\n            slidesToShow: 1,\r\n            slidesToScroll: 1,\r\n            autoplaySpeed: 1500,\r\n            speed: 500,\r\n          },\r\n        },\r\n      ],\r\n    };\r\n\r\n    return (\r\n      <Slider {...settings}>\r\n        {/* {this.state.data.map((object, index) => {\r\n          let colorClass = object.change_percent > 0 ? \"success\" : \"danger\";\r\n          return (\r\n            <Col key={`${index}`}>\r\n              <Card\r\n                bg=\"dark\"\r\n                text=\"light\"\r\n                className=\"z-depth-4 default-color mb-2\"\r\n              >\r\n                <Card.Body>\r\n                  <div className=\"d-flex justify-content-around\">\r\n                    <h3 className=\"float-left\">{object.name}</h3>\r\n                    <div className=\"d-flex justify-content-end\">\r\n                      <h3>\r\n                        {object.price}\r\n                        <Badge pill variant={colorClass} className=\"ml-2\">\r\n                          {object.change_percent}%\r\n                        </Badge>\r\n                      </h3>\r\n                    </div>\r\n                  </div>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          );\r\n        })} */}\r\n        {this.state.data2.map((object, index) => {\r\n          let colorClass = object.change_percent > 0 ? \"success\" : \"danger\";\r\n          return (\r\n            <Col key={`${index}`}>\r\n              <Card\r\n                bg=\"light\"\r\n                text=\"dark\"\r\n                className=\"z-depth-4 default-color mb-2\"\r\n              >\r\n                <Card.Body>\r\n                  <div className=\"d-flex justify-content-around\">\r\n                    <h5 className=\"float-left\">{object.name}</h5>\r\n                    <div className=\"d-flex justify-content-end\">\r\n                      <h5>\r\n                        R$ {object.price}\r\n                        <Badge pill variant={colorClass} className=\"ml-2\">\r\n                          {object.change_percent}%\r\n                        </Badge>\r\n                      </h5>\r\n                    </div>\r\n                  </div>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          );\r\n        })}\r\n      </Slider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SubNavbar;\r\n","import React from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport axios from \"axios\";\r\n\r\nclass DashboardChart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      series: [],\r\n      options: {\r\n        chart: {\r\n          type: \"bar\",\r\n          height: 350,\r\n        },\r\n        plotOptions: {\r\n          bar: {\r\n            colors: {\r\n              ranges: [\r\n                {\r\n                  from: -100,\r\n                  to: 0,\r\n                  color: \"#F15B46\",\r\n                },\r\n                {\r\n                  from: 0.00000001,\r\n                  to: 100,\r\n                  color: \"#10a11f\",\r\n                },\r\n              ],\r\n            },\r\n            columnWidth: \"100%\",\r\n          },\r\n        },\r\n        dataLabels: {\r\n          enabled: true,\r\n        },\r\n        yaxis: {\r\n          title: {\r\n            text: \"Variação\",\r\n          },\r\n          labels: {\r\n            formatter: function (y) {\r\n              return y.toFixed(2) + \"%\";\r\n            },\r\n          },\r\n        },\r\n        responsive: [\r\n          {\r\n            breakpoint: 1000,\r\n            options: {\r\n              chart: {\r\n                height: 400,\r\n              },\r\n              yaxis: {\r\n                show: false,\r\n              },\r\n              xaxis: {\r\n                labels: {\r\n                  show: false,\r\n                },\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:8000/api/stock/\")\r\n      .then((resp) => resp.data)\r\n      .then((data) => {\r\n        let ser = [];\r\n        let lab = [];\r\n        data.forEach((stock, index) => {\r\n          ser.push(stock.change_percent);\r\n          lab.push(stock.symbol);\r\n        });\r\n        this.setState({\r\n          series: [{ name: \"Variação\", data: ser }],\r\n          options: {\r\n            labels: lab,\r\n          },\r\n        });\r\n      });\r\n  }\r\n  render() {\r\n    return (\r\n      <div id=\"chart\">\r\n        <ReactApexChart\r\n          series={this.state.series}\r\n          options={this.state.options}\r\n          type=\"bar\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DashboardChart;\r\n","import React, { Component } from \"react\";\r\nimport StockTable from \"./StockTable\";\r\nimport FavoriteCard from \"./FavoriteCard\";\r\nimport SubNavbar from \"./SubNavbar\";\r\nimport DashboardChart from \"./DashboardChart\";\r\n\r\n// Grid Layout\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\n// Card Layout\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nclass DashboardComponent extends Component {\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Container fluid className=\"px-4\">\r\n          <SubNavbar />\r\n        </Container>\r\n        <Row className=\"mt-4\">\r\n          {/* <Card style={{ width: \"100vw\" }}>\r\n                <Card.Header>\r\n                  <h3>Seus Favoritos</h3>\r\n                </Card.Header>\r\n                <Card.Body> */}\r\n          <FavoriteCard favorite={true} />\r\n          {/* </Card.Body>\r\n              </Card> */}\r\n        </Row>\r\n        <Row className=\"mt-4\">\r\n          <Col sm={5} className=\"\">\r\n            <Card className=\"mt-2\" bg=\"light\" text=\"dark\">\r\n              <Card.Header>\r\n                <h3>Outras ações</h3>\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <StockTable favorite={false} />\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col sm={7}>\r\n            <Card className=\"mt-2\" bg=\"light\" text=\"dark\">\r\n              <DashboardChart />\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DashboardComponent;\r\n","import React from \"react\";\r\nimport { Card, Badge } from \"react-bootstrap\";\r\n\r\nconst InfoCard = (props) => {\r\n  const colorClass = props.percentageValue > 0 ? \"success\" : \"danger\";\r\n\r\n  return (\r\n    <Card bg=\"dark\" text=\"light\" className=\"z-depth-2 my-3\">\r\n      <div className=\"\">\r\n        <span\r\n          className=\"px-2 ml-3 py-2 mt-n3 rounded unique-color\"\r\n          style={{ fontSize: \"20px\", color: \"white\" }}\r\n        >\r\n          {props.title.toUpperCase()}\r\n        </span>\r\n        <div className=\"float-right text-right p-3\">\r\n          <p className=\"text-uppercase mb-1\">\r\n            {/* <small> */}\r\n            {props.description} {props.descriptionValue}\r\n            {/* </small> */}\r\n          </p>\r\n          <h4 className=\"font-weight-bold mb-0\">\r\n            {props.value}\r\n            <Badge pill className={`ml-1 badge-${colorClass}`}>\r\n              {props.percentage}\r\n            </Badge>\r\n          </h4>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className={`card-body badge-${colorClass} m-2 mb-n2 rounded pt-0`}\r\n      ></div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default InfoCard;\r\n","import React, { Fragment } from \"react\";\r\nimport { Form, Table } from \"react-bootstrap\";\r\nimport {\r\n  MDBBtn,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBModalFooter,\r\n  MDBContainer,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBInput,\r\n} from \"mdbreact\";\r\nimport axios from \"axios\";\r\n\r\nconst WalletTable = (props) => {\r\n  const [ModalEdit, setModalEdit] = React.useState(false);\r\n  const [ModalAdd, setModalAdd] = React.useState(false);\r\n  const [Stock, setStock] = React.useState(\"\");\r\n  const [Amount, setAmount] = React.useState(0);\r\n  const [Investment, setInvestment] = React.useState(0);\r\n  const [Broker, setBroker] = React.useState(\"\");\r\n  const [EditId, setEditId] = React.useState(0);\r\n  const [BuyDate, setBuyDate] = React.useState(\"\");\r\n\r\n  React.useEffect(() => {}, []);\r\n  const handleStockAmountChange = (e) => {\r\n    setAmount(parseInt(e.target.value));\r\n  };\r\n\r\n  const handleStockChange = (e) => {\r\n    setStock(e.target.value.toUpperCase());\r\n  };\r\n\r\n  const handleInvestmentChange = (e) => {\r\n    setInvestment(parseFloat(e.target.value));\r\n  };\r\n\r\n  const handleBrokerChange = (e) => {\r\n    setBroker(e.target.value);\r\n  };\r\n\r\n  const toggleModalAdd = () => {\r\n    setModalAdd(!ModalAdd);\r\n  };\r\n\r\n  const toggleModalEdit = (e) => {\r\n    let id = parseInt(e.target.getAttribute(\"id\"));\r\n    // var obj = props.data.find(function (o) {\r\n    //   return o.pk === id;\r\n    // });\r\n    setEditId(id);\r\n    setModalEdit(!ModalEdit);\r\n    // ModalEdit ? console.log(\"closed\") : console.log(\"opened\");\r\n  };\r\n\r\n  const deleteWalletItem = (e) => {\r\n    let id = parseInt(e.target.getAttribute(\"id\"));\r\n    var object = props.data.find(function (o) {\r\n      return o.pk === id;\r\n    });\r\n    window.confirm(\r\n      `Deseja mesmo excluir o item ${object.stock.name} (${object.stock.symbol}) da sua carteira?`\r\n    )\r\n      ? axios\r\n          .delete(\"http://localhost:8000/api/wallet/\", {\r\n            params: {\r\n              pk: e.target.getAttribute(\"id\"),\r\n            },\r\n          })\r\n          .then((resp) => {\r\n            resp.status === 201\r\n              ? alert(\"Ativo deletado com sucesso\")\r\n              : alert(\"Ops, houve algum erro\");\r\n          })\r\n          .then(() => {\r\n            props.cb(\"item excluído\");\r\n          })\r\n      : console.log(\"Cancelado\");\r\n  };\r\n\r\n  const editWalletItem = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .put(\"http://localhost:8000/api/wallet/\", {\r\n        pk: EditId,\r\n        stock_amount: Amount,\r\n        investment: Investment,\r\n      })\r\n      .then((resp) => {\r\n        alert(\"Item Editado com sucesso\");\r\n        console.log(resp);\r\n        props.cb(\"item editado\");\r\n      });\r\n  };\r\n\r\n  const submitWalletItem = (e) => {\r\n    e.preventDefault();\r\n    // console.log(Stock, Amount, Investment, Broker, props.owner);\r\n    axios\r\n      .post(\"http://localhost:8000/api/wallet/\", {\r\n        stock_amount: Amount,\r\n        symbol: Stock,\r\n        investment: Investment,\r\n        broker: Broker,\r\n        owner: props.owner,\r\n        buy_date: BuyDate,\r\n      })\r\n      .then((resp) => {\r\n        console.log(resp);\r\n        if (resp.status === 201) {\r\n          alert(\"Ação adicionada ao sua carteira\");\r\n        }\r\n      })\r\n      .then(() => {\r\n        props.cb(\"item adicionado\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex justify-content-between mb-2\">\r\n        <h4 className=\"d-flex flex-column justify-content-center\">\r\n          Ativos na carteira\r\n        </h4>\r\n        <Fragment>\r\n          <MDBBtn onClick={toggleModalAdd} color=\"elegant\">\r\n            Adicionar Ativo\r\n          </MDBBtn>\r\n        </Fragment>\r\n      </div>\r\n      <Table className=\"text-dark\" size=\"sm\" striped responsive>\r\n        <thead>\r\n          <tr className=\"text-center\">\r\n            <th></th>\r\n            <th>Corretora</th>\r\n            <th>Proprietário</th>\r\n            <th>Ativo</th>\r\n            <th>Preço de Compra</th>\r\n            <th>Quantidade</th>\r\n            <th>Investimento</th>\r\n            <th>Preço Atual</th>\r\n            <th>Patrimônio</th>\r\n            <th>Desempenho(%)</th>\r\n            <th>Desempenho(R$)</th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.data.map((item, index, array) => {\r\n            let change_percent =\r\n              Math.round(\r\n                ((item.money_amount - item.investment) * 10000) /\r\n                  item.investment\r\n              ) / 100;\r\n            let colorClass = change_percent > 0 ? \"success\" : \"danger\";\r\n            return (\r\n              <tr\r\n                key={index}\r\n                className=\"text-center\"\r\n                // onClick={editWalletItem}\r\n              >\r\n                <td className=\"align-middle\">\r\n                  <i\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={toggleModalEdit}\r\n                    id={item.pk}\r\n                    className=\"fas fa-edit align-middle\"\r\n                  ></i>\r\n                </td>\r\n                <td className=\"align-middle\">{item.broker}</td>\r\n                <td className=\"align-middle\">{item.owner}</td>\r\n                <td className=\"align-middle\">{`${item.stock.name} (${item.stock.symbol})`}</td>\r\n                <td className=\"align-middle\">\r\n                  {item.buy_price.toLocaleString(\"en-US\", {\r\n                    style: \"currency\",\r\n                    currency: \"BRL\",\r\n                  })}\r\n                </td>\r\n                <td className=\"align-middle\">{item.stock_amount}</td>\r\n                <td className=\"align-middle\">\r\n                  {item.investment.toLocaleString(\"en-US\", {\r\n                    style: \"currency\",\r\n                    currency: \"BRL\",\r\n                  })}\r\n                </td>\r\n                <td className=\"align-middle\">\r\n                  {item.stock.price.toLocaleString(\"en-US\", {\r\n                    style: \"currency\",\r\n                    currency: \"BRL\",\r\n                  })}\r\n                </td>\r\n                <td className=\"align-middle\">\r\n                  {item.money_amount.toLocaleString(\"en-US\", {\r\n                    style: \"currency\",\r\n                    currency: \"BRL\",\r\n                  })}\r\n                </td>\r\n                <td className=\"align-middle\">\r\n                  <span className={`badge-pill badge-${colorClass}`}>\r\n                    {change_percent} %\r\n                  </span>\r\n                </td>\r\n                <td className={`align-middle text-${colorClass}`}>\r\n                  {(item.money_amount - item.investment).toLocaleString(\r\n                    \"en-US\",\r\n                    {\r\n                      style: \"currency\",\r\n                      currency: \"BRL\",\r\n                    }\r\n                  )}\r\n                </td>\r\n                <td className=\"align-middle\">\r\n                  <i\r\n                    style={{ cursor: \"pointer\" }}\r\n                    id={item.pk}\r\n                    onClick={deleteWalletItem}\r\n                    className=\"align-middle fas fa-times\"\r\n                  ></i>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n\r\n      {/* ADD MODAL */}\r\n\r\n      <MDBModal isOpen={ModalAdd} toggle={toggleModalAdd}>\r\n        <MDBModalHeader toggle={toggleModalAdd}>\r\n          Custódia de Ações\r\n        </MDBModalHeader>\r\n        <MDBModalBody>\r\n          <MDBContainer>\r\n            <MDBRow className=\"d-flex justify-content-center\">\r\n              <MDBCol md=\"6\">\r\n                <form onSubmit={submitWalletItem}>\r\n                  <div className=\"grey-text\">\r\n                    <MDBInput\r\n                      label=\"Ativo Comprado\"\r\n                      icon=\"\"\r\n                      group\r\n                      style={{ fontSize: \"20px\" }}\r\n                      type=\"text\"\r\n                      onChange={handleStockChange}\r\n                    />\r\n                    <div className=\"md-form\">\r\n                      <input\r\n                        type=\"date\"\r\n                        name=\"transaction-date\"\r\n                        className=\"form-control\"\r\n                        id=\"transaction-date\"\r\n                        onChange={(e) => setBuyDate(e.target.value)}\r\n                        required\r\n                      />\r\n                    </div>\r\n                    <MDBInput\r\n                      label=\"Quantidade de Ações\"\r\n                      icon=\"\"\r\n                      style={{ fontSize: \"20px\" }}\r\n                      group\r\n                      type=\"text\"\r\n                      error=\"wrong\"\r\n                      success=\"right\"\r\n                      onChange={handleStockAmountChange}\r\n                    />\r\n                    <MDBInput\r\n                      label=\"Capital Investido\"\r\n                      icon=\"\"\r\n                      style={{ fontSize: \"20px\" }}\r\n                      group\r\n                      type=\"text\"\r\n                      onChange={handleInvestmentChange}\r\n                    />\r\n\r\n                    <Form.Group controlId=\"formBasicCheckbox\">\r\n                      <Form.Control\r\n                        as=\"select\"\r\n                        custom\r\n                        defaultValue=\"\"\r\n                        onChange={handleBrokerChange}\r\n                      >\r\n                        <option value=\"\" disabled>\r\n                          Corretora da Operação\r\n                        </option>\r\n                        <option value=\"Ágora - Bradesco\">Ágora</option>\r\n                        <option value=\"Banco do Brasil\">Banco do Brasil</option>\r\n                        <option value=\"Itaú\">Itaú</option>\r\n                      </Form.Control>\r\n                    </Form.Group>\r\n                  </div>\r\n                  <div className=\"text-center\">\r\n                    <MDBBtn type=\"submit\" onClick={toggleModalAdd}>\r\n                      Adicionar\r\n                    </MDBBtn>\r\n                  </div>\r\n                </form>\r\n              </MDBCol>\r\n            </MDBRow>\r\n          </MDBContainer>\r\n        </MDBModalBody>\r\n        <MDBModalFooter>\r\n          <MDBBtn\r\n            type=\"button\"\r\n            color=\"outline-elegant\"\r\n            onClick={toggleModalAdd}\r\n          >\r\n            Fechar\r\n          </MDBBtn>\r\n        </MDBModalFooter>\r\n      </MDBModal>\r\n\r\n      {/* EDIT MODAL */}\r\n      <MDBModal isOpen={ModalEdit} toggle={toggleModalEdit}>\r\n        <MDBModalHeader id=\"editModalHeader\" toggle={toggleModalEdit}>\r\n          Editando item da carteira\r\n        </MDBModalHeader>\r\n        <MDBModalBody>\r\n          <MDBContainer>\r\n            <MDBRow className=\"d-flex justify-content-center\">\r\n              <MDBCol md=\"6\">\r\n                <form onSubmit={editWalletItem}>\r\n                  <div className=\"grey-text\">\r\n                    <MDBInput\r\n                      label=\"Quantidade de Ações\"\r\n                      icon=\"\"\r\n                      style={{ fontSize: \"20px\" }}\r\n                      group\r\n                      type=\"text\"\r\n                      error=\"wrong\"\r\n                      success=\"right\"\r\n                      onChange={handleStockAmountChange}\r\n                    />\r\n                    <MDBInput\r\n                      label=\"Capital Investido\"\r\n                      icon=\"\"\r\n                      style={{ fontSize: \"20px\" }}\r\n                      group\r\n                      type=\"text\"\r\n                      onChange={handleInvestmentChange}\r\n                    />\r\n                  </div>\r\n                  <div className=\"text-center\">\r\n                    <MDBBtn type=\"submit\">Confirmar Edição</MDBBtn>\r\n                  </div>\r\n                </form>\r\n              </MDBCol>\r\n            </MDBRow>\r\n          </MDBContainer>\r\n        </MDBModalBody>\r\n        <MDBModalFooter>\r\n          <MDBBtn\r\n            type=\"button\"\r\n            color=\"outline-elegant\"\r\n            onClick={toggleModalEdit}\r\n          >\r\n            Fechar\r\n          </MDBBtn>\r\n        </MDBModalFooter>\r\n      </MDBModal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WalletTable;\r\n","import React, { Fragment } from \"react\";\r\nimport {\r\n  MDBBtn,\r\n  MDBBadge,\r\n  MDBInput,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBContainer,\r\n  MDBModalFooter,\r\n} from \"mdbreact\";\r\nimport { Form, Table } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\nclass TransactionsTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Broker: \"\",\r\n      Operation: \"\",\r\n      Stock: \"\",\r\n      Date: \"\",\r\n      Document: \"\",\r\n      Data: \"\",\r\n      ModalAdd: false,\r\n    };\r\n    this.submitTransactionItem = this.submitTransactionItem.bind(this);\r\n    this.deleteTransactionItem = this.deleteTransactionItem.bind(this);\r\n  }\r\n  deleteTransactionItem = (e) => {\r\n    var id = parseInt(e.target.getAttribute(\"id\"));\r\n    if (!window.confirm(\"Deseja mesmo excluir essa transação?\")) {\r\n      return 0;\r\n    }\r\n    axios\r\n      .delete(\"http://localhost:8000/api/transaction/\", {\r\n        params: {\r\n          pk: id,\r\n        },\r\n      })\r\n      .then((resp) => resp.data)\r\n      .then((data) => {\r\n        this.props.cb(\"item deletado\");\r\n      });\r\n  };\r\n  submitTransactionItem = (e) => {\r\n    e.preventDefault();\r\n    const uploadData = new FormData();\r\n    uploadData.append(\"broker\", this.state.Broker);\r\n    uploadData.append(\"operation\", this.state.Operation);\r\n    uploadData.append(\"date\", this.state.Date);\r\n    uploadData.append(\"document\", this.state.Document);\r\n    uploadData.append(\"stock\", this.state.Stock.toUpperCase());\r\n    uploadData.append(\"owner\", this.props.owner);\r\n\r\n    axios\r\n      .post(\"http://localhost:8000/api/transaction/\", uploadData)\r\n      .then((resp) => resp.data)\r\n      .then((data) => {\r\n        console.log(data);\r\n      })\r\n      .then(() => {\r\n        this.props.cb(\"item adicionado\");\r\n      });\r\n  };\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:8000/api/transaction/\", {\r\n        params: {\r\n          owner: this.props.owner,\r\n        },\r\n      })\r\n      .then((resp) => resp.data)\r\n      .then((data) => {\r\n        console.log(data);\r\n        this.setState({\r\n          Data: data,\r\n        });\r\n      });\r\n  }\r\n  render() {\r\n    const content =\r\n      this.state.Data.length === 0 ? (\r\n        <tr>\r\n          <td>Loading</td>\r\n        </tr>\r\n      ) : (\r\n        this.state.Data.map((item, index) => {\r\n          let colorClass =\r\n            item.operation === \"Compra\"\r\n              ? \"default\"\r\n              : item.operation === \"Venda\"\r\n              ? \"secondary\"\r\n              : \"primary\";\r\n          return (\r\n            <tr key={index}>\r\n              <td className=\"text-center align-middle\">{item.date}</td>\r\n              <td className=\"text-center align-middle\">{item.broker}</td>\r\n              <td className=\"text-center align-middle\">\r\n                <MDBBadge color={colorClass}>\r\n                  <span style={{ fontWeight: \"normal\", fontSize: \"14.4px\" }}>\r\n                    {item.operation}\r\n                  </span>\r\n                </MDBBadge>\r\n              </td>\r\n              <td className=\"text-center align-middle\">{item.stock}</td>\r\n              <td className=\"text-center align-middle\">\r\n                <a href={`http://localhost:8000${item.document}`} download>\r\n                  <i className=\"text-center align-middle fas fa-file-download fa-2x\"></i>\r\n                </a>\r\n              </td>\r\n              <td>\r\n                <i\r\n                  id={item.pk}\r\n                  onClick={this.deleteTransactionItem}\r\n                  className=\"fas fa-times fa-2x\"\r\n                ></i>\r\n              </td>\r\n            </tr>\r\n          );\r\n        })\r\n      );\r\n    return (\r\n      <>\r\n        <div className=\"d-flex justify-content-between mb-2\">\r\n          <h4 className=\"d-flex flex-column justify-content-center\">\r\n            Ativos na carteira\r\n          </h4>\r\n          <Fragment>\r\n            <MDBBtn\r\n              onClick={() => this.setState({ ModalAdd: !this.state.ModalAdd })}\r\n              color=\"elegant\"\r\n            >\r\n              Adicionar Ativo\r\n            </MDBBtn>\r\n          </Fragment>\r\n        </div>\r\n        <Table responsive>\r\n          <thead>\r\n            <tr>\r\n              <th className=\"text-center\">Data</th>\r\n              <th className=\"text-center\">Corretora</th>\r\n              <th className=\"text-center\">Operação</th>\r\n              <th className=\"text-center\">Ativo</th>\r\n              <th className=\"text-center\">Nota de Corretagem</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{content}</tbody>\r\n        </Table>\r\n        <MDBModal\r\n          isOpen={this.state.ModalAdd}\r\n          toggle={() => this.setState({ ModalAdd: !this.state.ModalAdd })}\r\n        >\r\n          <MDBModalHeader\r\n            toggle={() => this.setState({ ModalAdd: !this.state.ModalAdd })}\r\n          >\r\n            Custódia de Ações\r\n          </MDBModalHeader>\r\n          <MDBModalBody>\r\n            <MDBContainer>\r\n              <MDBRow className=\"d-flex justify-content-center\">\r\n                <MDBCol md=\"6\">\r\n                  <form\r\n                    encType=\"multipart/form-data\"\r\n                    onSubmit={this.submitTransactionItem}\r\n                  >\r\n                    <div className=\"grey-text\">\r\n                      <MDBInput\r\n                        label=\"Ativo Comprado\"\r\n                        icon=\"\"\r\n                        group\r\n                        style={{ fontSize: \"20px\" }}\r\n                        type=\"text\"\r\n                        onChange={(e) =>\r\n                          this.setState({ Stock: e.target.value })\r\n                        }\r\n                      />\r\n                      <div className=\"md-form\">\r\n                        <input\r\n                          type=\"date\"\r\n                          name=\"transaction-date\"\r\n                          className=\"form-control\"\r\n                          id=\"transaction-date\"\r\n                          onChange={(e) =>\r\n                            this.setState({ Date: e.target.value })\r\n                          }\r\n                          required\r\n                        />\r\n                      </div>\r\n\r\n                      <Form.Group controlId=\"formBasicCheckbox\">\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          custom\r\n                          defaultValue=\"\"\r\n                          onChange={(e) =>\r\n                            this.setState({ Broker: e.target.value })\r\n                          }\r\n                        >\r\n                          <option value=\"\" disabled>\r\n                            Corretora da Operação\r\n                          </option>\r\n                          <option value=\"Ágora - Bradesco\">Ágora</option>\r\n                          <option value=\"Banco do Brasil\">\r\n                            Banco do Brasil\r\n                          </option>\r\n                          <option value=\"Itaú\">Itaú</option>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n\r\n                      <Form.Group controlId=\"formBasicCheckbox\">\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          custom\r\n                          defaultValue=\"\"\r\n                          onChange={(e) =>\r\n                            this.setState({ Operation: e.target.value })\r\n                          }\r\n                        >\r\n                          <option value=\"\" disabled>\r\n                            Operação\r\n                          </option>\r\n                          <option value=\"Compra\">Compra</option>\r\n                          <option value=\"Venda\">Venda</option>\r\n                          <option value=\"Compra e Venda\">Compra e Venda</option>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                      <Form.File\r\n                        id=\"custom-file\"\r\n                        label=\"Nota de Corretagem\"\r\n                        onChange={(e) =>\r\n                          this.setState({ Document: e.target.files[0] })\r\n                        }\r\n                        custom\r\n                      />\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                      <MDBBtn\r\n                        type=\"submit\"\r\n                        onClick={() =>\r\n                          this.setState({ ModalAdd: !this.state.ModalAdd })\r\n                        }\r\n                      >\r\n                        Adicionar\r\n                      </MDBBtn>\r\n                    </div>\r\n                  </form>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </MDBContainer>\r\n          </MDBModalBody>\r\n          <MDBModalFooter>\r\n            <MDBBtn\r\n              type=\"button\"\r\n              color=\"outline-elegant\"\r\n              onClick={() => this.setState({ ModalAdd: !this.state.ModalAdd })}\r\n            >\r\n              Fechar\r\n            </MDBBtn>\r\n          </MDBModalFooter>\r\n        </MDBModal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TransactionsTable;\r\n","import React from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\n\r\nclass WalletAllocationChart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      options: {\r\n        chart: {\r\n          type: \"donut\",\r\n          height: \"250px\",\r\n        },\r\n        animations: {\r\n          enabled: true,\r\n          easing: \"easeinout\",\r\n          speed: 800,\r\n          animateGradually: {\r\n            enabled: true,\r\n            delay: 150,\r\n          },\r\n          dynamicAnimation: {\r\n            enabled: true,\r\n            speed: 350,\r\n          },\r\n        },\r\n        title: {\r\n          text: \"Distribuição da carteira\",\r\n          align: \"center\",\r\n          style: {\r\n            fontFamily: \"Oswald\",\r\n            fontSize: \"22px\",\r\n          },\r\n        },\r\n        plotOptions: {\r\n          pie: {\r\n            donut: {\r\n              labels: {\r\n                show: true,\r\n                name: {\r\n                  show: true,\r\n                  fontFamily: \"Oswald\",\r\n                  fontSize: \"26px\",\r\n                },\r\n                value: {\r\n                  show: true,\r\n                  fontSize: \"26px\",\r\n                  fontFamily: \"Oswald\",\r\n                  formatter: function (val) {\r\n                    let amount = parseFloat(val).toLocaleString(\"en-US\", {\r\n                      style: \"currency\",\r\n                      currency: \"BRL\",\r\n                    });\r\n                    return `${amount}`;\r\n                  },\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n        legend: {\r\n          show: true,\r\n          position: \"bottom\",\r\n        },\r\n        colors: [\r\n          \"#2E93fA\",\r\n          \"#66DA26\",\r\n          \"#546E7A\",\r\n          \"#E91E63\",\r\n          \"#FF9800\",\r\n          \"#00B746\",\r\n          \"#EF403C\",\r\n          \"#3D3D3D\",\r\n        ],\r\n        dataLabels: {\r\n          enabled: true,\r\n          formatter: function (val) {\r\n            return Math.round(val * 100, 2) / 100 + \"%\";\r\n          },\r\n        },\r\n        responsive: [\r\n          {\r\n            breakpoint: 1000,\r\n            options: {\r\n              chart: {\r\n                height: 400,\r\n              },\r\n              yaxis: {\r\n                show: false,\r\n              },\r\n              xaxis: {\r\n                labels: {\r\n                  show: false,\r\n                },\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      series: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    var lab = [];\r\n    var ser = [];\r\n    this.props.data.forEach((item) => {\r\n      ser.push(item.money_amount);\r\n      lab.push(item.stock.symbol);\r\n    });\r\n    this.setState({\r\n      series: ser,\r\n      options: {\r\n        labels: lab,\r\n      },\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"chart\">\r\n        <ReactApexChart\r\n          options={this.state.options}\r\n          series={this.state.series}\r\n          type=\"donut\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WalletAllocationChart;\r\n","import React from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\n\r\nclass WalletYield extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      options: {\r\n        chart: {\r\n          type: \"bar\",\r\n          height: 250,\r\n        },\r\n        plotOptions: {\r\n          bar: {\r\n            horizontal: false,\r\n            dataLabels: {\r\n              position: \"top\",\r\n            },\r\n          },\r\n        },\r\n        dataLabels: {\r\n          enabled: true,\r\n          offsetX: -6,\r\n          formatter: function (val) {\r\n            return Math.round(val * 100, 2) / 100 + \"%\";\r\n          },\r\n          style: {\r\n            fontSize: \"12px\",\r\n            colors: [\"#fff\"],\r\n          },\r\n        },\r\n        stroke: {\r\n          show: true,\r\n          width: 1,\r\n          colors: [\"#fff\"],\r\n        },\r\n        animations: {\r\n          enabled: true,\r\n          easing: \"easeinout\",\r\n          speed: 800,\r\n          animateGradually: {\r\n            enabled: true,\r\n            delay: 150,\r\n          },\r\n          dynamicAnimation: {\r\n            enabled: true,\r\n            speed: 350,\r\n          },\r\n        },\r\n        title: {\r\n          text: \"Comparativo - Ibovespa/Carteira\",\r\n          align: \"center\",\r\n          style: {\r\n            fontFamily: \"Oswald\",\r\n            fontSize: \"22px\",\r\n          },\r\n        },\r\n        responsive: [\r\n          {\r\n            breakpoint: 1000,\r\n            options: {\r\n              chart: {\r\n                height: 400,\r\n              },\r\n              yaxis: {\r\n                show: false,\r\n              },\r\n              xaxis: {\r\n                labels: {\r\n                  show: false,\r\n                },\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      series: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    var lab = [];\r\n    var ser1 = [];\r\n    var ser2 = [];\r\n    this.props.data.forEach((item) => {\r\n      ser1.push(item.change_percent);\r\n      ser2.push(item.ibovespa_change);\r\n      lab.push(item.stock.symbol);\r\n    });\r\n    this.setState({\r\n      series: [\r\n        { name: \"Rendimento\", data: ser1 },\r\n        { name: \"Ibovespa\", data: ser2 },\r\n      ],\r\n      options: {\r\n        labels: lab,\r\n      },\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"chart\">\r\n        <ReactApexChart\r\n          options={this.state.options}\r\n          series={this.state.series}\r\n          type=\"bar\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WalletYield;\r\n","import React from \"react\";\r\nimport {\r\n  Row,\r\n  Card,\r\n  Spinner,\r\n  Container,\r\n  Form,\r\n  Col,\r\n  Tab,\r\n  Nav,\r\n} from \"react-bootstrap\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn } from \"mdbreact\";\r\nimport InfoCard from \"./InfoCard\";\r\nimport WalletTable from \"./WalletTable\";\r\nimport TransactionsTable from \"./TransactionsTable\";\r\nimport WalletAllocationChart from \"./WalletAllocationChart\";\r\nimport WalletYield from \"./WalletYield\";\r\nimport axios from \"axios\";\r\n// import { MDBBtn } from \"mdbreact\";\r\n\r\nclass WalletComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Loading: false,\r\n      Wallet: [],\r\n      Owner: \"\",\r\n      TotalAmount: 0,\r\n      TotalInvestment: 0,\r\n      TotalChangePct: 0,\r\n      MaxStockChange: {},\r\n      MinStockChange: {},\r\n      noData: false,\r\n      stockAmout: 0,\r\n      investment: 0,\r\n      stock: \"\",\r\n      broker: \"\",\r\n      buy_date: \"\",\r\n      updateRun: true,\r\n      stockData: [],\r\n    };\r\n\r\n    this.handleOwnerChange = this.handleOwnerChange.bind(this);\r\n    this.walletChangeCallback = this.walletChangeCallback.bind(this);\r\n    this.submitWalletItem = this.submitWalletItem.bind(this);\r\n  }\r\n\r\n  // var total_money_amount = 0;\r\n  // var total_investment = 0;\r\n  // var total_change_pct = 0;\r\n  // const [Loading, setLoading] = useState(false);\r\n  // const [Wallet, setWallet] = useState([]);\r\n  // const [Owner, setOwner] = useState(\"\");\r\n\r\n  handleOwnerChange = (e) => {\r\n    this.setState({\r\n      Owner: e.target.value,\r\n    });\r\n    // console.log(this.state.Owner);\r\n    this.setState({\r\n      Loading: true,\r\n    });\r\n    axios\r\n      .get(\"http://localhost:8000/api/wallet/\", {\r\n        params: {\r\n          owner: e.target.value,\r\n        },\r\n      })\r\n      .then((resp) => resp.data)\r\n      .then((data) => {\r\n        // console.log(data);\r\n        //calculating higher\r\n        var higher = Math.max.apply(\r\n          Math,\r\n          data.map(function (obj) {\r\n            return obj.change_percent;\r\n          })\r\n        );\r\n        var object = data.find(function (o) {\r\n          return o.change_percent === higher;\r\n        });\r\n\r\n        // ... and min\r\n        var min = Math.min.apply(\r\n          Math,\r\n          data.map(function (obj) {\r\n            return obj.change_percent;\r\n          })\r\n        );\r\n        var object2 = data.find(function (o) {\r\n          return o.change_percent === min;\r\n        });\r\n\r\n        //calculating totals\r\n        let amount = data.reduce((sum, currentValue) => {\r\n          return currentValue.money_amount + sum;\r\n        }, 0);\r\n        let investment = data.reduce((sum, currentValue) => {\r\n          return currentValue.investment + sum;\r\n        }, 0);\r\n        let change =\r\n          Math.round((10000 * (amount - investment)) / investment, 2) / 100;\r\n\r\n        // setting states\r\n        this.setState({\r\n          Wallet: data,\r\n          TotalAmount: amount,\r\n          TotalInvestment: investment,\r\n          TotalChangePct: change,\r\n          MaxStockChange: object,\r\n          MinStockChange: object2,\r\n        });\r\n        return data;\r\n      })\r\n      .then((data) => {\r\n        if (data.length > 0) {\r\n          this.setState({\r\n            Loading: false,\r\n            noData: false,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            Loading: false,\r\n            noData: true,\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  walletChangeCallback = (msg) => {\r\n    this.setState({\r\n      Loading: true,\r\n    });\r\n    axios\r\n      .get(\"http://localhost:8000/api/wallet/\", {\r\n        params: {\r\n          owner: this.state.Owner,\r\n        },\r\n      })\r\n      .then((resp) => resp.data)\r\n      .then((data) => {\r\n        //calculating higher\r\n        var higher = Math.max.apply(\r\n          Math,\r\n          data.map(function (obj) {\r\n            return obj.change_percent;\r\n          })\r\n        );\r\n        var object = data.find(function (o) {\r\n          return o.change_percent === higher;\r\n        });\r\n\r\n        // ... and min\r\n        var min = Math.min.apply(\r\n          Math,\r\n          data.map(function (obj) {\r\n            return obj.change_percent;\r\n          })\r\n        );\r\n        var object2 = data.find(function (o) {\r\n          return o.change_percent === min;\r\n        });\r\n\r\n        //calculating totals\r\n        let amount = data.reduce((sum, currentValue) => {\r\n          return currentValue.money_amount + sum;\r\n        }, 0);\r\n        let investment = data.reduce((sum, currentValue) => {\r\n          return currentValue.investment + sum;\r\n        }, 0);\r\n        let change =\r\n          Math.round((10000 * (amount - investment)) / investment, 2) / 100;\r\n\r\n        // setting states\r\n        this.setState({\r\n          Wallet: data,\r\n          TotalAmount: amount,\r\n          TotalInvestment: investment,\r\n          TotalChangePct: change,\r\n          MaxStockChange: object,\r\n          MinStockChange: object2,\r\n        });\r\n        return data;\r\n      })\r\n      .then((data) => {\r\n        if (data.length > 0) {\r\n          this.setState({\r\n            Loading: false,\r\n            noData: false,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            Loading: false,\r\n            noData: true,\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  submitWalletItem = (e) => {\r\n    e.preventDefault();\r\n    // console.log(Stock, Amount, Investment, Broker, props.owner);\r\n    axios\r\n      .post(\"http://localhost:8000/api/wallet/\", {\r\n        stock_amount: this.state.stockAmount,\r\n        symbol: this.state.stock,\r\n        investment: this.state.investment,\r\n        broker: this.state.broker,\r\n        owner: this.state.Owner,\r\n        buy_date: this.state.buy_date,\r\n      })\r\n      .then((resp) => {\r\n        console.log(resp);\r\n        if (resp.status === 201) {\r\n          alert(\"Ação adicionada ao sua carteira\");\r\n        }\r\n      })\r\n      .then(() => {\r\n        this.walletChangeCallback(\"item adicionado\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    if (this.state.updateRun) {\r\n      axios\r\n        .get(`http://localhost:8000/api/wallet/stocks/${this.state.Owner}`)\r\n        .then((resp) => resp.data)\r\n        .then((data) => {\r\n          this.setState({\r\n            stockData: data,\r\n          });\r\n        });\r\n      this.setState({\r\n        updateRun: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const spinner = (\r\n      <div className=\"d-flex justify-content-center\">\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n      </div>\r\n    );\r\n\r\n    const noDataContent = (\r\n      <Container>\r\n        <Row className=\"d-flex justify-content-center mt-2\">\r\n          <Card style={{ width: \"65%\" }} bg=\"dark\" text=\"light\">\r\n            <Card.Header>\r\n              <h3 className=\"d-flex justify-content-center\">\r\n                Ops, parece que não há itens nesta carteira, adicione seu\r\n                primeiro item abaixo!\r\n              </h3>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <MDBContainer>\r\n                <MDBRow className=\"d-flex justify-content-center\">\r\n                  <MDBCol md=\"6\">\r\n                    <form onSubmit={this.submitWalletItem}>\r\n                      <div className=\"grey-text\">\r\n                        <MDBInput\r\n                          label=\"Ativo Comprado\"\r\n                          icon=\"\"\r\n                          group\r\n                          style={{ fontSize: \"20px\" }}\r\n                          type=\"text\"\r\n                          onChange={(e) => {\r\n                            this.setState({\r\n                              stock: e.target.value.toUpperCase(),\r\n                            });\r\n                          }}\r\n                        />\r\n                        <div className=\"md-form\">\r\n                          <input\r\n                            type=\"date\"\r\n                            name=\"transaction-date\"\r\n                            className=\"form-control\"\r\n                            id=\"transaction-date\"\r\n                            onChange={(e) =>\r\n                              this.setState({ buy_date: e.target.value })\r\n                            }\r\n                            required\r\n                          />\r\n                        </div>\r\n                        <MDBInput\r\n                          label=\"Quantidade de Ações\"\r\n                          icon=\"\"\r\n                          style={{ fontSize: \"20px\" }}\r\n                          group\r\n                          type=\"text\"\r\n                          error=\"wrong\"\r\n                          success=\"right\"\r\n                          onChange={(e) => {\r\n                            this.setState({ stockAmount: e.target.value });\r\n                          }}\r\n                        />\r\n                        <MDBInput\r\n                          label=\"Capital Investido\"\r\n                          icon=\"\"\r\n                          style={{ fontSize: \"20px\" }}\r\n                          group\r\n                          type=\"text\"\r\n                          onChange={(e) => {\r\n                            this.setState({ investment: e.target.value });\r\n                          }}\r\n                        />\r\n\r\n                        <Form.Group controlId=\"formBasicCheckbox\">\r\n                          <Form.Control\r\n                            as=\"select\"\r\n                            custom\r\n                            defaultValue=\"\"\r\n                            onChange={(e) => {\r\n                              this.setState({ broker: e.target.value });\r\n                            }}\r\n                          >\r\n                            <option value=\"\" disabled>\r\n                              Corretora da Operação\r\n                            </option>\r\n                            <option value=\"Ágora - Bradesco\">Ágora</option>\r\n                            <option value=\"Banco do Brasil\">\r\n                              Banco do Brasil\r\n                            </option>\r\n                            <option value=\"Itaú\">Itaú</option>\r\n                          </Form.Control>\r\n                        </Form.Group>\r\n                      </div>\r\n                      <div className=\"text-center\">\r\n                        <MDBBtn type=\"submit\">Enviar</MDBBtn>\r\n                      </div>\r\n                    </form>\r\n                  </MDBCol>\r\n                </MDBRow>\r\n              </MDBContainer>\r\n            </Card.Body>\r\n          </Card>\r\n        </Row>\r\n      </Container>\r\n    );\r\n\r\n    const variant = \"dark\";\r\n    const { Owner } = this.state;\r\n    const { noData } = this.state;\r\n    const { Loading } = this.state;\r\n    const notChosen = Owner === \"\";\r\n\r\n    return Owner === \"\" ? (\r\n      <>\r\n        <Container>\r\n          <Row className=\"d-flex justify-content-center mt-2\">\r\n            <Card\r\n              bg={variant.toLowerCase()}\r\n              text={variant.toLowerCase() === \"light\" ? \"dark\" : \"white\"}\r\n              style={{ width: \"65%\" }}\r\n              className=\"mb-2\"\r\n            >\r\n              <Card.Header>\r\n                <h3 className=\"d-flex justify-content-center\">\r\n                  Selecionar Carteira\r\n                </h3>\r\n              </Card.Header>\r\n              <Card.Body>\r\n                {/* <Card.Title>{variant} Card Title </Card.Title> */}\r\n                <Form>\r\n                  <Form.Group controlId=\"formOwnerSelect\">\r\n                    <Form.Label>Proprietário</Form.Label>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      custom\r\n                      onChange={this.handleOwnerChange}\r\n                      defaultValue=\"\"\r\n                    >\r\n                      <option value=\"\" disabled>\r\n                        Selecionar Carteira a ser mostrada\r\n                      </option>\r\n                      <option value=\"Ricardo\">Ricardo</option>\r\n                      <option value=\"Itala\">Itala</option>\r\n                      <option value=\"Thayssa\">Thayssa</option>\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                  {/* <Form.Group controlId=\"formSubmitBtn\">\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <MDBBtn type=\"submit\" color=\"elegant\">\r\n                        Ver Carteira\r\n                      </MDBBtn>\r\n                    </div>\r\n                  </Form.Group> */}\r\n                </Form>\r\n              </Card.Body>\r\n            </Card>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    ) : notChosen ? (\r\n      <div></div>\r\n    ) : Loading ? (\r\n      spinner\r\n    ) : noData ? (\r\n      noDataContent\r\n    ) : (\r\n      <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"data-table\">\r\n        <Container fluid className=\"p-4\">\r\n          <Row>\r\n            <Col sm={3}>\r\n              <Row>\r\n                <Col sm={12}>\r\n                  <Card className=\"mb-3\" bg=\"light\" text=\"dark\">\r\n                    <Card.Body>\r\n                      <Nav variant=\"pills\" className=\"flex-column\">\r\n                        <Nav.Item>\r\n                          <Nav.Link\r\n                            style={{ color: \"black\", fontSize: \"16px\" }}\r\n                            eventKey=\"highlights\"\r\n                          >\r\n                            Destaques\r\n                          </Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                          <Nav.Link\r\n                            style={{ color: \"black\", fontSize: \"16px\" }}\r\n                            eventKey=\"data-table\"\r\n                          >\r\n                            Itens da Carteira\r\n                          </Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                          <Nav.Link\r\n                            style={{ color: \"black\", fontSize: \"16px\" }}\r\n                            eventKey=\"transactions\"\r\n                          >\r\n                            Transações\r\n                          </Nav.Link>\r\n                        </Nav.Item>\r\n                      </Nav>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col sm={12}>\r\n                  {this.state.stockData.length < 0 ? (\r\n                    spinner\r\n                  ) : (\r\n                    <Card bg=\"light\" text=\"dark\" className=\"mb-3\">\r\n                      <Card.Body>\r\n                        {this.state.stockData.map((item, index) => {\r\n                          let colorClass =\r\n                            item.change_percent > 0 ? \"success\" : \"danger\";\r\n                          return (\r\n                            <div key={index} className=\"mb-2\">\r\n                              <div className=\"d-flex w-100 justify-content-between\">\r\n                                <h5 className=\"mb-1\">{item.symbol}</h5>\r\n                                <p className=\"mb-1\">\r\n                                  R$ {item.price.toFixed(2)}\r\n                                  <span\r\n                                    className={`badge badge-${colorClass} ml-1 badge-pill`}\r\n                                  >\r\n                                    {item.change_percent.toFixed(2)} %\r\n                                  </span>\r\n                                </p>\r\n                              </div>\r\n                              <div className=\"d-flex w-100 justify-content-between\">\r\n                                <p className=\"mb-1\">\r\n                                  <small className=\"text-muted\">\r\n                                    {item.name}\r\n                                  </small>\r\n                                </p>\r\n                                <p className=\"mb-1\">\r\n                                  <small className=\"text-muted\">\r\n                                    <a\r\n                                      href={`/stock/${item.pk}`}\r\n                                      className=\"text-muted\"\r\n                                    >\r\n                                      Gráfico\r\n                                      <i className=\"align-center ml-1 fas fa-external-link-alt fa-sm\"></i>\r\n                                    </a>\r\n                                  </small>\r\n                                </p>\r\n                              </div>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </Card.Body>\r\n                    </Card>\r\n                  )}\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n            <Col sm={9}>\r\n              <Card className=\"mb-3\" bg=\"light\" text=\"dark\">\r\n                <Tab.Content>\r\n                  <Tab.Pane eventKey=\"highlights\">\r\n                    <Row className=\"m-4\">\r\n                      <Col lg={4} xs={12}>\r\n                        <InfoCard\r\n                          title=\"Patrimônio\"\r\n                          description=\"Capital Investido: \"\r\n                          descriptionValue={this.state.TotalInvestment.toLocaleString(\r\n                            \"en-US\",\r\n                            {\r\n                              style: \"currency\",\r\n                              currency: \"BRL\",\r\n                            }\r\n                          )}\r\n                          value={this.state.TotalAmount.toLocaleString(\r\n                            \"en-US\",\r\n                            {\r\n                              style: \"currency\",\r\n                              currency: \"BRL\",\r\n                            }\r\n                          )}\r\n                          percentage={`${this.state.TotalChangePct} %`}\r\n                          percentageValue={this.state.TotalChangePct}\r\n                        />\r\n                      </Col>\r\n                      <Col lg={4} xs={12}>\r\n                        <InfoCard\r\n                          title=\"Maior Lucro\"\r\n                          description={this.state.MaxStockChange.stock.name.substr(\r\n                            0,\r\n                            18\r\n                          )}\r\n                          descriptionValue={`(${this.state.MaxStockChange.stock.symbol})`}\r\n                          value={(\r\n                            Math.round(\r\n                              100 *\r\n                                (this.state.MaxStockChange.money_amount -\r\n                                  this.state.MaxStockChange.investment),\r\n                              2\r\n                            ) / 100\r\n                          ).toLocaleString(\"en-US\", {\r\n                            style: \"currency\",\r\n                            currency: \"BRL\",\r\n                          })}\r\n                          percentage={`\r\n                  ${\r\n                    Math.round(\r\n                      10000 *\r\n                        ((this.state.MaxStockChange.money_amount -\r\n                          this.state.MaxStockChange.investment) /\r\n                          this.state.MaxStockChange.investment),\r\n                      2\r\n                    ) / 100\r\n                  } %`}\r\n                          percentageValue={\r\n                            Math.round(\r\n                              10000 *\r\n                                ((this.state.MaxStockChange.money_amount -\r\n                                  this.state.MaxStockChange.investment) /\r\n                                  this.state.MaxStockChange.investment),\r\n                              2\r\n                            ) / 100\r\n                          }\r\n                        />\r\n                      </Col>\r\n                      <Col lg={4} xs={12}>\r\n                        <InfoCard\r\n                          title=\"Maior Prejuízo\"\r\n                          description={this.state.MinStockChange.stock.name.substr(\r\n                            0,\r\n                            18\r\n                          )}\r\n                          descriptionValue={`(${this.state.MinStockChange.stock.symbol})`}\r\n                          value={(\r\n                            Math.round(\r\n                              100 *\r\n                                (this.state.MinStockChange.money_amount -\r\n                                  this.state.MinStockChange.investment),\r\n                              2\r\n                            ) / 100\r\n                          ).toLocaleString(\"en-US\", {\r\n                            style: \"currency\",\r\n                            currency: \"BRL\",\r\n                          })}\r\n                          percentage={`\r\n                  ${\r\n                    Math.round(\r\n                      10000 *\r\n                        ((this.state.MinStockChange.money_amount -\r\n                          this.state.MinStockChange.investment) /\r\n                          this.state.MinStockChange.investment),\r\n                      2\r\n                    ) / 100\r\n                  } %`}\r\n                          percentageValue={\r\n                            Math.round(\r\n                              10000 *\r\n                                ((this.state.MinStockChange.money_amount -\r\n                                  this.state.MinStockChange.investment) /\r\n                                  this.state.MinStockChange.investment),\r\n                              2\r\n                            ) / 100\r\n                          }\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col sm={12} lg={5}>\r\n                        <WalletAllocationChart\r\n                          owner={this.state.Owner}\r\n                          data={this.state.Wallet}\r\n                        />\r\n                      </Col>\r\n                      <Col sm={12} lg={7}>\r\n                        <WalletYield\r\n                          owner={this.state.Owner}\r\n                          data={this.state.Wallet}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                  </Tab.Pane>\r\n                  <Tab.Pane eventKey=\"data-table\">\r\n                    <Col lg={12} xs={12}>\r\n                      <WalletTable\r\n                        cb={this.walletChangeCallback}\r\n                        owner={this.state.Owner}\r\n                        data={this.state.Wallet}\r\n                      />\r\n                    </Col>\r\n                  </Tab.Pane>\r\n                  <Tab.Pane eventKey=\"transactions\">\r\n                    <Col lg={12} xs={12}>\r\n                      <TransactionsTable\r\n                        cb={this.walletChangeCallback}\r\n                        owner={this.state.Owner}\r\n                        data={this.state.Wallet}\r\n                      />\r\n                    </Col>\r\n                  </Tab.Pane>\r\n                </Tab.Content>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Tab.Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WalletComponent;\r\n","import React from \"react\";\r\nimport { Table, Row, Col, Card, Container, Spinner } from \"react-bootstrap\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport axios from \"axios\";\r\n\r\nclass StockDetailComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Indicators: undefined,\r\n      Dataset2: [],\r\n      Dataset: [],\r\n      Date: [],\r\n      Price: [],\r\n      Options: {},\r\n      Series: [],\r\n      Options2: {\r\n        labels: [\"Compra\", \"Neutro\", \"Venda\"],\r\n        chart: {\r\n          type: \"donut\",\r\n        },\r\n        animations: {\r\n          enabled: true,\r\n          easing: \"easeinout\",\r\n          speed: 800,\r\n          animateGradually: {\r\n            enabled: true,\r\n            delay: 150,\r\n          },\r\n          dynamicAnimation: {\r\n            enabled: true,\r\n            speed: 350,\r\n          },\r\n        },\r\n        title: {\r\n          text: \"Distribuição da carteira\",\r\n          align: \"center\",\r\n          style: {\r\n            fontFamily: \"Oswald\",\r\n            fontSize: \"22px\",\r\n          },\r\n        },\r\n        plotOptions: {\r\n          pie: {\r\n            donut: {\r\n              labels: {\r\n                show: true,\r\n                name: {\r\n                  show: true,\r\n                  fontFamily: \"Oswald\",\r\n                  fontSize: \"26px\",\r\n                },\r\n                value: {\r\n                  show: true,\r\n                  fontSize: \"26px\",\r\n                  fontFamily: \"Oswald\",\r\n                  formatter: function (val) {\r\n                    return `${val} indicadores`;\r\n                  },\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n        legend: {\r\n          show: true,\r\n          position: \"bottom\",\r\n        },\r\n        colors: [\r\n          \"#2E93fA\",\r\n          \"#66DA26\",\r\n          \"#546E7A\",\r\n          // \"#E91E63\",\r\n          // \"#FF9800\",\r\n          // \"#00B746\",\r\n          // \"#EF403C\",\r\n          // \"#3D3D3D\",\r\n        ],\r\n        dataLabels: {\r\n          enabled: true,\r\n          formatter: function (val) {\r\n            return Math.round(val * 100, 2) / 100 + \"%\";\r\n          },\r\n        },\r\n        responsive: [\r\n          {\r\n            breakpoint: 1000,\r\n            options: {\r\n              chart: {\r\n                height: 400,\r\n              },\r\n              yaxis: {\r\n                show: false,\r\n              },\r\n              xaxis: {\r\n                labels: {\r\n                  show: false,\r\n                },\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let dataset = [];\r\n    let series = [];\r\n    let dates = [];\r\n    let closePrices = [];\r\n    let name;\r\n    let indicators;\r\n    let buy = 0;\r\n    let sell = 0;\r\n    let neutral = 0;\r\n    axios\r\n      .get(`http://localhost:8000/api/stock/get/${this.props.match.params.id}`)\r\n      .then((resp) => resp.data)\r\n      .then((data) => {\r\n        name = data.name;\r\n        indicators = data.indicator;\r\n        indicators.momentum.forEach((item) => {\r\n          if (item.indicator !== \"Highs/Lows(14)\") {\r\n            if (item.signal === \"buy\") {\r\n              buy = buy + 1;\r\n            } else if (item.signal === \"sell\") {\r\n              sell = sell + 1;\r\n            } else {\r\n              neutral = neutral + 1;\r\n            }\r\n          }\r\n        });\r\n        if (indicators.ema_signal === \"buy\") {\r\n          buy = buy + 1;\r\n        } else if (indicators.ema_signal === \"sell\") {\r\n          sell = sell + 1;\r\n        } else {\r\n          neutral = neutral + 1;\r\n        }\r\n        console.log(data);\r\n        data.data.historical.forEach((item, index, array) => {\r\n          dates.push(item.date);\r\n          closePrices.push(item.close);\r\n          let change_percent = 0;\r\n          if (index !== array.length - 1) {\r\n            change_percent =\r\n              Math.round(\r\n                (((item.close - array[index + 1].close) * 100) /\r\n                  array[index + 1].close) *\r\n                  100,\r\n                2\r\n              ) / 100;\r\n          }\r\n          series.unshift({\r\n            x: item.date,\r\n            y: [item.open, item.high, item.low, item.close],\r\n          });\r\n          dataset.push({\r\n            date: item.date,\r\n            close: item.close,\r\n            change_percent: change_percent,\r\n          });\r\n        });\r\n        // setLoadingProgress(90);\r\n        // setLoading(false);\r\n      })\r\n      .then(() => {\r\n        this.setState({\r\n          Dataset2: [buy, neutral, sell],\r\n          Indicators: indicators,\r\n          Dataset: dataset,\r\n          Date: dates,\r\n          Price: closePrices,\r\n          Series: [{ data: series }],\r\n          Options: {\r\n            chart: {\r\n              type: \"candlestick\",\r\n              height: 550,\r\n            },\r\n            title: {\r\n              text: name,\r\n              align: \"left\",\r\n            },\r\n            xaxis: {\r\n              type: \"datetime\",\r\n            },\r\n            yaxis: {\r\n              tooltip: {\r\n                enabled: true,\r\n              },\r\n            },\r\n          },\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const content =\r\n      this.state.Indicators === undefined ? (\r\n        <div className=\"d-flex justiy-content-center\">\r\n          <Spinner></Spinner>\r\n        </div>\r\n      ) : (\r\n        <Card.Body>\r\n          <Row>\r\n            <Col lg={6} sm={12}>\r\n              <ReactApexChart\r\n                options={this.state.Options2}\r\n                series={this.state.Dataset2}\r\n                type=\"donut\"\r\n                height=\"500\"\r\n              />\r\n            </Col>\r\n            <Col lg={6} sm={12}>\r\n              <Table>\r\n                <thead>\r\n                  <tr>\r\n                    <th style={{ fontSize: \"18px\" }}>\r\n                      <strong>Limite</strong>\r\n                    </th>\r\n                    <th style={{ fontSize: \"18px\" }}>\r\n                      <strong>Valor</strong>\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.state.Indicators.resistances.map((value, index) => {\r\n                    return (\r\n                      <tr key={index}>\r\n                        <td>Resistencia {index + 1}</td>\r\n                        <td>R$ {value}</td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                  {this.state.Indicators.supports.map((value, index) => {\r\n                    return (\r\n                      <tr key={index}>\r\n                        <td>Suportes {index + 1}</td>\r\n                        <td>R$ {value}</td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </Table>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      );\r\n    return (\r\n      <Container fluid>\r\n        <Row className=\"mt-4\">\r\n          <Col xl={8} lg={9} sm={12} className=\"mb-4\">\r\n            <Row>\r\n              <Col sm={12}>\r\n                <Card bg=\"light\" id=\"chart\">\r\n                  <ReactApexChart\r\n                    options={this.state.Options}\r\n                    series={this.state.Series}\r\n                    type=\"candlestick\"\r\n                    height=\"500\"\r\n                  />\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col className=\"mt-4\" xs={12}>\r\n                <Card bg=\"light\">\r\n                  <Card.Header>Indicadores</Card.Header>\r\n                  {content}\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n          <Col xl={4} lg={3} sm={12}>\r\n            <Card bg=\"light\">\r\n              <Table>\r\n                <thead>\r\n                  <tr className=\"text-center\">\r\n                    <th style={{ width: \"20%\" }}>Ativo</th>\r\n                    <th style={{ width: \"20%\" }}>Preço</th>\r\n                    <th style={{ width: \"20%\" }}>Variação(%)</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.state.Dataset.map((item, index) => {\r\n                    let colorClass =\r\n                      item.change_percent > 0 ? \"success\" : \"danger\";\r\n                    return (\r\n                      <tr key={index} className=\"text-center\">\r\n                        <td>{item.date}</td>\r\n                        <td>R$ {item.close}</td>\r\n                        <td className={`text-${colorClass}`}>\r\n                          {item.change_percent}%\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </Table>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StockDetailComponent;\r\n","import React, { useState } from \"react\";\r\nimport { Col, Card, Container, Row, Form, Button } from \"react-bootstrap/\";\r\nimport axios from \"axios\";\r\nimport { MDBInput } from \"mdbreact\";\r\n\r\nconst AddStockComponent = () => {\r\n  const [symbol, setSymbol] = useState(\"\");\r\n  const [isETF, setETF] = useState(false);\r\n  const [isFund, setFund] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .post(\"http://localhost:8000/api/stock/\", {\r\n        symbol: symbol.toUpperCase(),\r\n        is_etf: isETF,\r\n        is_fund: isFund,\r\n      })\r\n      .then((resp) => {\r\n        console.log(resp);\r\n        resp.status === 201\r\n          ? alert(\r\n              `${resp.data.name}(${resp.data.symbol}) adicionado ao portfólio`\r\n            )\r\n          : alert(\"Ops, algum erro ocorreu\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    // console.log(symbol);\r\n    // console.log(isETF);\r\n    // console.log(isFund);\r\n  };\r\n\r\n  // cuida do textinput\r\n  const handleSymbolChange = (e) => {\r\n    setSymbol(e.target.value);\r\n    // console.log(symbol);\r\n  };\r\n\r\n  // cuida da checkbox ETF\r\n  const handleETFChange = (e) => {\r\n    // atualiza o stateHook para o contrário do seu valor anterior\r\n    setETF(!isETF);\r\n    // console.log(isETF);\r\n  };\r\n\r\n  // cuida da checkbox FUND\r\n  const handleFundChange = (e) => {\r\n    // atualiza o stateHook para o contrário do seu valor anterior\r\n    setFund(!isFund);\r\n    // console.log(isFund);\r\n  };\r\n\r\n  const variant = \"dark\";\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-center mt-3\">\r\n        <Card\r\n          bg={variant.toLowerCase()}\r\n          text={variant.toLowerCase() === \"light\" ? \"dark\" : \"white\"}\r\n          style={{ width: \"65%\" }}\r\n          className=\"mb-2\"\r\n        >\r\n          <Card.Header>\r\n            <h3 className=\"d-flex justify-content-center \">Adicionar Ação</h3>\r\n          </Card.Header>\r\n          <Card.Body>\r\n            {/* <Card.Title>{variant} Card Title </Card.Title> */}\r\n            <Form onSubmit={handleSubmit}>\r\n              <MDBInput\r\n                label=\"Insira a sigla da ação que deseja adicionar ao seu portfolio\"\r\n                icon=\"\"\r\n                group\r\n                style={{ fontSize: \"20px\", color: \"white\" }}\r\n                type=\"text\"\r\n                error=\"wrong\"\r\n                success=\"right\"\r\n                onChange={handleSymbolChange}\r\n              />\r\n              <Form.Group controlId=\"etfCheckBox\">\r\n                <Col className=\"\">\r\n                  <Form.Check\r\n                    checked={isETF}\r\n                    onChange={handleETFChange}\r\n                    type=\"checkbox\"\r\n                    className=\"\"\r\n                    label=\"ETF\"\r\n                  />\r\n                </Col>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"fundCheckBox\">\r\n                <Col>\r\n                  <Form.Check\r\n                    checked={isFund}\r\n                    onChange={handleFundChange}\r\n                    type=\"checkbox\"\r\n                    className=\"\"\r\n                    label=\"Fundo Imobiliário\"\r\n                  />\r\n                </Col>\r\n              </Form.Group>\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Adicionar\r\n              </Button>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AddStockComponent;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Col,\r\n  Row,\r\n  Card,\r\n  Table,\r\n  Form,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\nimport { MDBInput } from \"mdbreact\";\r\nimport axios from \"axios\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\n\r\nclass QueryComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      symbol: \"\",\r\n      Dataset: [],\r\n      Date: [],\r\n      Price: [],\r\n      Options: {},\r\n      Series: [],\r\n      loadedContent: false,\r\n      loadingContent: false,\r\n      Options2: {\r\n        labels: [\"Compra\", \"Neutro\", \"Venda\"],\r\n        chart: {\r\n          type: \"donut\",\r\n        },\r\n        animations: {\r\n          enabled: true,\r\n          easing: \"easeinout\",\r\n          speed: 800,\r\n          animateGradually: {\r\n            enabled: true,\r\n            delay: 150,\r\n          },\r\n          dynamicAnimation: {\r\n            enabled: true,\r\n            speed: 350,\r\n          },\r\n        },\r\n        title: {\r\n          text: \"Distribuição da carteira\",\r\n          align: \"center\",\r\n          style: {\r\n            fontFamily: \"Oswald\",\r\n            fontSize: \"22px\",\r\n          },\r\n        },\r\n        plotOptions: {\r\n          pie: {\r\n            donut: {\r\n              labels: {\r\n                show: true,\r\n                name: {\r\n                  show: true,\r\n                  fontFamily: \"Oswald\",\r\n                  fontSize: \"26px\",\r\n                },\r\n                value: {\r\n                  show: true,\r\n                  fontSize: \"26px\",\r\n                  fontFamily: \"Oswald\",\r\n                  formatter: function (val) {\r\n                    return `${val} indicadores`;\r\n                  },\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n        legend: {\r\n          show: true,\r\n          position: \"bottom\",\r\n        },\r\n        colors: [\r\n          \"#2E93fA\",\r\n          \"#66DA26\",\r\n          \"#546E7A\",\r\n          // \"#E91E63\",\r\n          // \"#FF9800\",\r\n          // \"#00B746\",\r\n          // \"#EF403C\",\r\n          // \"#3D3D3D\",\r\n        ],\r\n        dataLabels: {\r\n          enabled: true,\r\n          formatter: function (val) {\r\n            return Math.round(val * 100, 2) / 100 + \"%\";\r\n          },\r\n        },\r\n        responsive: [\r\n          {\r\n            breakpoint: 1000,\r\n            options: {\r\n              chart: {\r\n                height: 400,\r\n              },\r\n              yaxis: {\r\n                show: false,\r\n              },\r\n              xaxis: {\r\n                labels: {\r\n                  show: false,\r\n                },\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleSymbolChange = this.handleSymbolChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  handleSymbolChange(e) {\r\n    // console.log(e.target.value);\r\n    this.setState({\r\n      symbol: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    this.setState({ loadingContent: true });\r\n    e.preventDefault();\r\n    let dataset = [];\r\n    let series = [];\r\n    let dates = [];\r\n    let closePrices = [];\r\n    let name;\r\n    let indicators;\r\n    let buy = 0;\r\n    let sell = 0;\r\n    let neutral = 0;\r\n    axios\r\n      .get(`http://localhost:8000/api/query/`, {\r\n        params: {\r\n          symbol: this.state.symbol,\r\n        },\r\n      })\r\n      .then((resp) => resp.data)\r\n      .then((data) => {\r\n        name = this.state.symbol.toLocaleUpperCase();\r\n        indicators = data.indicator;\r\n        indicators.momentum.forEach((item) => {\r\n          if (item.indicator !== \"Highs/Lows(14)\") {\r\n            if (item.signal === \"buy\") {\r\n              buy = buy + 1;\r\n            } else if (item.signal === \"sell\") {\r\n              sell = sell + 1;\r\n            } else {\r\n              neutral = neutral + 1;\r\n            }\r\n          }\r\n        });\r\n        if (indicators.ema_signal === \"buy\") {\r\n          buy = buy + 1;\r\n        } else if (indicators.ema_signal === \"sell\") {\r\n          sell = sell + 1;\r\n        } else {\r\n          neutral = neutral + 1;\r\n        }\r\n        console.log(data);\r\n        data.data.historical.forEach((item, index, array) => {\r\n          dates.push(item.date);\r\n          closePrices.push(item.close);\r\n          let change_percent = 0;\r\n          if (index !== array.length - 1) {\r\n            change_percent =\r\n              Math.round(\r\n                (((item.close - array[index + 1].close) * 100) /\r\n                  array[index + 1].close) *\r\n                  100,\r\n                2\r\n              ) / 100;\r\n          }\r\n          series.unshift({\r\n            x: item.date,\r\n            y: [item.open, item.high, item.low, item.close],\r\n          });\r\n          dataset.push({\r\n            date: item.date,\r\n            close: item.close,\r\n            change_percent: change_percent,\r\n          });\r\n        });\r\n        // setLoadingProgress(90);\r\n        // setLoading(false);\r\n      })\r\n      .then(() => {\r\n        console.log(series);\r\n        this.setState({\r\n          Dataset2: [buy, neutral, sell],\r\n          Indicators: indicators,\r\n          Dataset: dataset,\r\n          Date: dates,\r\n          Price: closePrices,\r\n          Series: [{ data: series }],\r\n          Options: {\r\n            chart: {\r\n              type: \"candlestick\",\r\n              height: 550,\r\n            },\r\n            title: {\r\n              text: name,\r\n              align: \"left\",\r\n            },\r\n            yaxis: {\r\n              tooltip: {\r\n                enabled: true,\r\n              },\r\n            },\r\n            responsive: [\r\n              {\r\n                breakpoint: 1000,\r\n                options: {\r\n                  chart: {\r\n                    height: 400,\r\n                  },\r\n                  yaxis: {\r\n                    show: true,\r\n                  },\r\n                  xaxis: {\r\n                    labels: {\r\n                      show: false,\r\n                    },\r\n                  },\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        });\r\n      })\r\n      .then(() => {\r\n        this.setState({\r\n          loadedContent: true,\r\n          loadingContent: false,\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const content2 =\r\n      this.state.Indicators === undefined ? (\r\n        <div className=\"d-flex justiy-content-center\">\r\n          <Spinner></Spinner>\r\n        </div>\r\n      ) : (\r\n        <Card.Body>\r\n          <Row>\r\n            <Col lg={6} sm={12}>\r\n              <ReactApexChart\r\n                options={this.state.Options2}\r\n                series={this.state.Dataset2}\r\n                type=\"donut\"\r\n                height=\"500\"\r\n              />\r\n            </Col>\r\n            <Col lg={6} sm={12}>\r\n              <Table>\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"text-center\" style={{ fontSize: \"18px\" }}>\r\n                      <strong>Limite</strong>\r\n                    </th>\r\n                    <th className=\"text-center\" style={{ fontSize: \"18px\" }}>\r\n                      <strong>Valor</strong>\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.state.Indicators.resistances.map((value, index) => {\r\n                    return (\r\n                      <tr key={index}>\r\n                        <td className=\"text-center\">Resistencia {index + 1}</td>\r\n                        <td className=\"text-center\">R$ {value}</td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                  {this.state.Indicators.supports.map((value, index) => {\r\n                    return (\r\n                      <tr key={index}>\r\n                        <td className=\"text-center\">Suportes {index + 1}</td>\r\n                        <td className=\"text-center\">R$ {value}</td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </Table>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      );\r\n    const spinner = (\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </Spinner>\r\n    );\r\n    const content = (\r\n      <Row className=\"\">\r\n        <Col xl={8} lg={9} sm={12}>\r\n          <Row>\r\n            <Col sm={12}>\r\n              <Card id=\"chart\" bg=\"light\" className=\"mb-2\">\r\n                <ReactApexChart\r\n                  options={this.state.Options}\r\n                  series={this.state.Series}\r\n                  type=\"candlestick\"\r\n                  height=\"500\"\r\n                  className=\"\"\r\n                />\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"mt-2\" xs={12}>\r\n              <Card bg=\"light\">\r\n                <Card.Header>Indicadores</Card.Header>\r\n                {content2}\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col className=\"mt-2\" xl={4} lg={3} sm={12}>\r\n          <Card bg=\"light\">\r\n            <Table striped>\r\n              <thead>\r\n                <tr className=\"text-center\">\r\n                  <th style={{ width: \"20%\" }}>Ativo</th>\r\n                  <th style={{ width: \"20%\" }}>Preço</th>\r\n                  <th style={{ width: \"20%\" }}>Variação(%)</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.state.Dataset.map((item, index) => {\r\n                  let colorClass =\r\n                    item.change_percent > 0 ? \"success\" : \"danger\";\r\n                  return (\r\n                    <tr key={index} className=\"text-center\">\r\n                      <td>{item.date}</td>\r\n                      <td>R$ {item.close}</td>\r\n                      <td className={`text-${colorClass}`}>\r\n                        {item.change_percent}%\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </Table>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n    const variant = \"dark\";\r\n    return (\r\n      <Container>\r\n        <Row className=\"justify-content-center mt-3\">\r\n          <Card\r\n            bg={variant.toLowerCase()}\r\n            text={variant.toLowerCase() === \"light\" ? \"dark\" : \"white\"}\r\n            style={{ width: \"65%\" }}\r\n            className=\"mb-2\"\r\n          >\r\n            <Card.Header>\r\n              <h3 className=\"d-flex justify-content-center\">Procurar</h3>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Form onSubmit={this.handleSubmit}>\r\n                <Form.Group controlId=\"symbol\">\r\n                  <MDBInput\r\n                    label=\"Insira a sigla da ação a ser visualizada aqui\"\r\n                    icon=\"\"\r\n                    style={{ fontSize: \"20px\", color: \"white\" }}\r\n                    group\r\n                    type=\"text\"\r\n                    error=\"wrong\"\r\n                    success=\"right\"\r\n                    onChange={this.handleSymbolChange}\r\n                  />\r\n                </Form.Group>\r\n                <div className=\"d-flex justify-content-center\">\r\n                  <Button variant=\"primary\" type=\"submit\">\r\n                    Adicionar\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n            </Card.Body>\r\n          </Card>\r\n        </Row>\r\n        {this.state.loadedContent ? (\r\n          content\r\n        ) : this.state.loadingContent ? (\r\n          <div className=\"d-flex justify-content-center\">{spinner}</div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QueryComponent;\r\n","import React from \"react\";\r\nimport { Row, Col, Table, Card, Container } from \"react-bootstrap\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport axios from \"axios\";\r\n\r\nclass IbovespaComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Dataset: [],\r\n      Date: [],\r\n      Price: [],\r\n      Options: {},\r\n      Series: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let dataset = [];\r\n    let series = [];\r\n    let dates = [];\r\n    let closePrices = [];\r\n    // let name;\r\n    axios\r\n      .get(`http://localhost:8000/api/index/historical/`, {\r\n        params: {\r\n          name: \"Bovespa\",\r\n        },\r\n      })\r\n      .then((resp) => resp.data)\r\n      .then((data) => {\r\n        // name = data.name;\r\n        console.log(data);\r\n        data.data.historical.forEach((item, index, array) => {\r\n          dates.push(item.date);\r\n          closePrices.push(item.close);\r\n          let change_percent = 0;\r\n          if (index !== array.length - 1) {\r\n            change_percent =\r\n              Math.round(\r\n                (((item.close - array[index + 1].close) * 100) /\r\n                  array[index + 1].close) *\r\n                  100,\r\n                2\r\n              ) / 100;\r\n          }\r\n          series.unshift({\r\n            x: item.date,\r\n            y: [item.open, item.high, item.low, item.close],\r\n          });\r\n          dataset.push({\r\n            date: item.date,\r\n            close: item.close,\r\n            change_percent: change_percent,\r\n          });\r\n        });\r\n        // setLoadingProgress(90);\r\n        // setLoading(false);\r\n      })\r\n      .then(() => {\r\n        this.setState({\r\n          Dataset: dataset,\r\n          Date: dates,\r\n          Price: closePrices,\r\n          Series: [{ data: series }],\r\n          Options: {\r\n            chart: {\r\n              type: \"candlestick\",\r\n              height: 550,\r\n            },\r\n            // title: {\r\n            //   text: \"Ibovespa\",\r\n            //   align: \"center\",\r\n            // },\r\n            xaxis: {\r\n              type: \"datetime\",\r\n            },\r\n            yaxis: {\r\n              tooltip: {\r\n                enabled: true,\r\n              },\r\n            },\r\n          },\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Row className=\"mt-4\">\r\n          <Col xl={8} lg={9} sm={12}>\r\n            <Card bg=\"light\" id=\"chart\" className=\"mb-4\">\r\n              <Card.Header style={{ fontSize: \"20px\" }}>\r\n                Gráfico histórico do índice Ibovespa\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <ReactApexChart\r\n                  options={this.state.Options}\r\n                  series={this.state.Series}\r\n                  type=\"candlestick\"\r\n                  height=\"500\"\r\n                />\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col xl={4} lg={3} sm={12}>\r\n            <Card bg=\"light\">\r\n              <Card.Header style={{ fontSize: \"20px\" }}>\r\n                Tabela com os valores do gráfico\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <Table>\r\n                  <thead>\r\n                    <tr className=\"text-center\">\r\n                      <th style={{ width: \"20%\" }}>Ibovespa</th>\r\n                      <th style={{ width: \"20%\" }}>Índice</th>\r\n                      <th style={{ width: \"20%\" }}>Variação(%)</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {this.state.Dataset.map((item, index) => {\r\n                      let colorClass =\r\n                        item.change_percent > 0 ? \"success\" : \"danger\";\r\n                      return (\r\n                        <tr key={index} className=\"text-center\">\r\n                          <td>{item.date}</td>\r\n                          <td>{item.close} Pts</td>\r\n                          <td className={`text-${colorClass}`}>\r\n                            {item.change_percent}%\r\n                          </td>\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                  </tbody>\r\n                </Table>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IbovespaComponent;\r\n","import React from \"react\";\r\n// import ReactDOM from \"react-dom\";\r\nimport TopBar from \"./global/Navbar\";\r\nimport DashboardComponent from \"./dashboard/Dashboard\";\r\nimport WalletComponent from \"./wallet/Wallet\";\r\n// import ForexComponent from \"./forex/ForexComponent\";\r\nimport StockDetailComponent from \"./stockdetail/StockDetailComponent\";\r\nimport AddStockComponent from \"./addstock/AddStockComponent\";\r\nimport QueryComponent from \"./query/QueryComponent\";\r\nimport IbovespaComponent from \"./bvsp/IbovespaComponent\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\n// import ReactDOM from \"react-dom\";\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"App\">\r\n        <TopBar />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={DashboardComponent} />\r\n          <Route exact path=\"/wallet\" component={WalletComponent} />\r\n\r\n          {/* <Route exact path=\"/forex\" component={ForexComponent} /> */}\r\n          <Route exact path=\"/stock/:id\" component={StockDetailComponent} />\r\n          <Route exact path=\"/addStock\" component={AddStockComponent} />\r\n          <Route exact path=\"/query\" component={QueryComponent} />\r\n          <Route exact path=\"/bvsp\" component={IbovespaComponent} />\r\n        </Switch>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport App from \"./App.js\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\n\r\nReactDOM.render(<App />, rootElement);\r\n"],"sourceRoot":""}